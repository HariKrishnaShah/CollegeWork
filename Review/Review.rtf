{\rtf1\ansi\deff0\deftab720{\fonttbl{\f0\fmodern Consolas;}}
{\colortbl\red0\green128\blue0;\red0\green0\blue0;\red255\green0\blue0;\red0\green120\blue215;\red128\green0\blue128;\red0\green0\blue255;}
{\info{\comment Generated by the SynEdit RTF exporter}
{\title Review.rtf}}

\deflang1033\pard\plain\f0\fs26 \cf0 #include <iostream>
\par \cf1\b using\b0  \b namespace\b0  std\cf2\b ;
\par 
\par \b0\cf3\i //Coded by Hari Shah
\par 
\par \i0\cf0 #define max_account 100
\par #define min_balance 1000
\par 
\par \cf1\b class\b0  client_details\cf2\b \{
\par \b0\cf1 	\b protected\cf2 :
\par \b0\cf1 		\b char\b0  name\cf2\b [\b0\cf4 100\cf2\b ];
\par \b0\cf1 		\cf3\i // 1 for citizenship, 2 for driving license, 3 for passport_id;
\par \i0\cf1 		\b int\b0  national_id_type\cf2\b ;
\par \b0\cf1 		\b union\b0  national_id\cf2\b \{
\par \b0\cf1 			\b long\b0  \b long\b0  \b int\b0  citizenship\cf2\b ;
\par \b0\cf1 			\b long\b0  \b long\b0  \b int\b0  driving_license\cf2\b ;
\par \b0\cf1 			\b long\b0  \b long\b0  \b int\b0  passport_id\cf2\b ;
\par \b0\cf1 		\cf2\b \}\b0\cf1 id\cf2\b ;
\par \b0\cf1 		\b struct\b0  date_of_birth\cf2\b \{
\par \b0\cf1 			\b int\b0  day\cf2\b ;
\par \b0\cf1 			\b int\b0  month\cf2\b ;
\par \b0\cf1 			\b int\b0  year\cf2\b ;
\par \b0\cf1 		\cf2\b \}\b0\cf1 dob\cf2\b ;
\par \b0\cf1 		\b struct\b0  address\cf2\b \{
\par \b0\cf1 			\b char\b0  city\cf2\b [\b0\cf4 100\cf2\b ];
\par \b0\cf1 			\b char\b0  country\cf2\b [\b0\cf4 100\cf2\b ];
\par \b0\cf1 		\cf2\b \}\b0\cf1 location\cf2\b ;
\par 
\par \b0\cf1 	\b public\cf2 :
\par \b0\cf1 		\b void\b0  get_details\cf2\b ()\{
\par \b0\cf1 			cout\cf2\b <<\cf5 "Enter the client details below."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 			cout\cf2\b <<\cf5 "Name: "\cf2 ;
\par \b0\cf1 			cin\cf2\b >>\b0\cf1 name\cf2\b ;
\par \b0\cf1 			cout\cf2\b <<\cf5 "Choose a national id type."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 			cout\cf2\b <<\cf5 "Enter 1 for citizenship, 2 for driving license or 3 for passport: "\cf2 ;
\par \b0\cf1 			cin\cf2\b >>\b0\cf1 national_id_type\cf2\b ;
\par \b0\cf1 			cout\cf2\b <<\cf5 "Enter your national id: "\cf2 ;
\par \b0\cf1 			cin\cf2\b >>\b0\cf1 id\cf2\b .\b0\cf1 citizenship\cf2\b ;
\par \b0\cf1 			cout\cf2\b <<\cf5 "Enter your birth details in integer below."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 			cout\cf2\b <<\cf5 "Day of Birth: "\cf2 ;
\par \b0\cf1 			cin\cf2\b >>\b0\cf1 dob\cf2\b .\b0\cf1 day\cf2\b ;
\par \b0\cf1 			cout\cf2\b <<\cf5 "Month of Birth: "\cf2 ;
\par \b0\cf1 			cin\cf2\b >>\b0\cf1 dob\cf2\b .\b0\cf1 month\cf2\b ;
\par \b0\cf1 			cout\cf2\b <<\cf5 "Year of Birth: "\cf2 ;
\par \b0\cf1 			cin\cf2\b >>\b0\cf1 dob\cf2\b .\b0\cf1 year\cf2\b ;
\par \b0\cf1 			cout\cf2\b <<\cf5 "Enter your address details below."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 			cout\cf2\b <<\cf5 "Enter your city: "\cf2 ;
\par \b0\cf1 			cin\cf2\b >>\b0\cf1 location\cf2\b .\b0\cf1 city\cf2\b ;
\par \b0\cf1 			cout\cf2\b <<\cf5 "Enter your country: "\cf2 ;
\par \b0\cf1 			cin\cf2\b >>\b0\cf1 location\cf2\b .\b0\cf1 country\cf2\b ;
\par \b0\cf1 		\cf2\b \}
\par \b0\cf1 		\b void\b0  display\cf2\b ()\{
\par \b0\cf1 			cout\cf2\b <<\cf5 "The client details are given below: "\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 			cout\cf2\b <<\cf5 "Name: "\cf2 <<\b0\cf1 name\cf2\b <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 			\b if\cf2 (\b0\cf1 national_id_type\cf2\b ==\b0\cf4 1\cf2\b )\{
\par \b0\cf1 				cout\cf2\b <<\cf5 "Citizenship number: "\cf2 <<\b0\cf1 id\cf2\b .\b0\cf1 citizenship\cf2\b <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 			\cf2\b \}
\par \b0\cf1 			\b else\b0  \b if\cf2 (\b0\cf1 national_id_type\cf2\b ==\b0\cf4 2\cf2\b )\{
\par \b0\cf1 				cout\cf2\b <<\cf5 "Driving License number: "\cf2 <<\b0\cf1 id\cf2\b .\b0\cf1 driving_license\cf2\b <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 			\cf2\b \}
\par \b0\cf1 			\b else\b0  \b if\cf2 (\b0\cf1 national_id_type\cf2\b ==\b0\cf4 3\cf2\b )\{
\par \b0\cf1 				cout\cf2\b <<\cf5 "Passport number: "\cf2 <<\b0\cf1 id\cf2\b .\b0\cf1 passport_id\cf2\b <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 			\cf2\b \}
\par \b0\cf1 			
\par 			cout\cf2\b <<\cf5 "Date of birth is: "\cf2 <<\b0\cf1 dob\cf2\b .\b0\cf1 year\cf2\b <<\cf5 "/"\cf2 <<\b0\cf1 dob\cf2\b .\b0\cf1 month\cf2\b <<\cf5 "/"\cf2 <<\b0\cf1 dob\cf2\b .\b0\cf1 day\cf2\b <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 			cout\cf2\b <<\cf5 "Address is: "\cf2 <<\b0\cf1 location\cf2\b .\b0\cf1 city\cf2\b <<\cf5 ", "\cf2 <<\b0\cf1 location\cf2\b .\b0\cf1 country\cf2\b <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 		\cf2\b \}
\par \};
\par 
\par \b0\cf3\i /*
\par ...- / -.-- -... .. .-. / .-.. -... .... / .--. ..- ...- --. . -. .-.-.- .-.. -... .... . ..-. / -. -.-- .--- -. .-.. ..-. / ..- -. . ...- / ..-. ..- -. ..- .-.-.-
\par 
\par */
\par \i0\cf1\b class\b0  saving_account\cf2\b :\cf1 public\b0  \b virtual\b0  client_details\cf2\b \{
\par \b0\cf1 	\b protected\cf2 :
\par \b0\cf1 		\b int\b0  acc_no\cf2\b ;
\par \b0\cf1 		\b float\b0  balance\cf2\b ;
\par \b0\cf1 		\b int\b0  pin\cf2\b ;
\par \b0\cf1 	\b public\cf2 :
\par \b0\cf1 		saving_account\cf2\b ()\{
\par \b0\cf1 			balance \cf2\b =\b0\cf1  \cf4 0\cf2\b ;
\par \b0\cf1 		\cf2\b \}
\par \b0\cf1 		\b void\b0  get\cf2\b ()\{
\par \b0\cf1 			cout\cf2\b <<\cf5 "Enter saving account number: "\cf2 ;
\par \b0\cf1 			cin\cf2\b >>\b0\cf1 acc_no\cf2\b ;
\par \b0\cf1 			cout\cf2\b <<\cf5 "Enter a PIN for security: "\cf2 ;
\par \b0\cf1 			cin\cf2\b >>\b0\cf1 pin\cf2\b ;
\par \b0\cf1 			cout\cf2\b <<\cf5 "The saving account has been created successfully created."\cf2 ;
\par \b0\cf1 		\cf2\b \}
\par \b0\cf1 		\b void\b0  display\cf2\b ()\{
\par \b0\cf1 			cout\cf2\b <<\cf5 "\\nThe saving account details is given below: "\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 			cout\cf2\b <<\cf5 "Account number: "\cf2 <<\b0\cf1 acc_no\cf2\b <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 			cout\cf2\b <<\cf5 "Balance Amount: "\cf2 <<\b0\cf1 balance\cf2\b <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 		\cf2\b \}
\par \b0\cf1 		\b int\b0  search\cf2\b (\cf1 int\b0  search_acc\cf2\b ,\b0\cf1  \b int\b0  pin_search\cf2\b )\{
\par \b0\cf1 			\b if\cf2 (\b0\cf1 search_acc \cf2\b ==\b0\cf1  acc_no \cf2\b &&\b0\cf1  pin_search \cf2\b ==\b0\cf1  pin\cf2\b )\{
\par \b0\cf1 				\b return\b0  \cf4 1\cf2\b ;
\par \b0\cf1 			\cf2\b \}
\par \b0\cf1 			\b return\b0  \cf4 0\cf2\b ;
\par \b0\cf1 		\cf2\b \}
\par \b0\cf1 		\b void\b0  withdraw\cf2\b ()\{
\par \b0\cf1 			\b float\b0  withdraw_req\cf2\b ,\b0\cf1  after_balance\cf2\b ;
\par \b0\cf1 			cout\cf2\b <<\cf5 "Enter the amount to withdraw: "\cf2 ;
\par \b0\cf1 			cin\cf2\b >>\b0\cf1 withdraw_req\cf2\b ;
\par \b0\cf1 			
\par 			after_balance \cf2\b =\b0\cf1  balance \cf2\b -\b0\cf1  withdraw_req\cf2\b ;
\par \b0\cf1 			\b if\cf2 (\b0\cf1 after_balance \cf2\b >\b0\cf1 min_balance\cf2\b )\{
\par \b0\cf1 				balance \cf2\b =\b0\cf1  after_balance\cf2\b ;
\par \b0\cf1 				cout\cf2\b <<\cf5 "Withdrawl Sucessful."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 			\cf2\b \}
\par \b0\cf1 			\b else\cf2 \{
\par \b0\cf1 				cout\cf2\b <<\cf5 "You don't have sufficient balance."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 			\cf2\b \}
\par \b0\cf1 		\cf2\b \}
\par \b0\cf1 		\b void\b0  deposit\cf2\b ()\{
\par \b0\cf1 			\b float\b0  deposit_req\cf2\b ;
\par \b0\cf1 			cout\cf2\b <<\cf5 "Enter the amount to deposit: "\cf2 ;
\par \b0\cf1 			cin\cf2\b >>\b0\cf1 deposit_req\cf2\b ;
\par \b0\cf1 			balance \cf2\b +=\b0\cf1  deposit_req\cf2\b ;
\par \b0\cf1 			cout\cf2\b <<\cf5 "Amount Deposited Sucessfully."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 		\cf2\b \}
\par \b0\cf1 		\b int\b0  return_saving_pin\cf2\b ()\{
\par \b0\cf1 			\b return\b0  pin\cf2\b ;
\par \b0\cf1 		\cf2\b \}
\par \};
\par 
\par \cf1 class\b0  current_account\cf2\b :\cf1 public\b0  \b virtual\b0  client_details\cf2\b \{
\par \b0\cf1 	\b protected\cf2 :
\par \b0\cf1 		\b int\b0  acc_no\cf2\b ;
\par \b0\cf1 		\b float\b0  balance\cf2\b ;
\par \b0\cf1 		\b int\b0  pin\cf2\b ;
\par \b0\cf1 	\b public\cf2 :
\par \b0\cf1 		current_account\cf2\b ()\{
\par \b0\cf1 			balance \cf2\b =\b0\cf1  \cf4 0\cf2\b ;
\par \b0\cf1 		\cf2\b \}
\par \b0\cf1 		\b void\b0  get\cf2\b ()\{
\par \b0\cf1 			cout\cf2\b <<\cf5 "Enter current account number: "\cf2 ;
\par \b0\cf1 			cin\cf2\b >>\b0\cf1 acc_no\cf2\b ;
\par \b0\cf1 			cout\cf2\b <<\cf5 "Enter a PIN for security: "\cf2 ;
\par \b0\cf1 			cin\cf2\b >>\b0\cf1 pin\cf2\b ;
\par \b0\cf1 			cout\cf2\b <<\cf5 "The current account has been created successfully created."\cf2 ;
\par \b0\cf1 		\cf2\b \}
\par \b0\cf1 		\b void\b0  display\cf2\b ()\{
\par \b0\cf1 			cout\cf2\b <<\cf5 "The current account details is given below: "\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 			cout\cf2\b <<\cf5 "Account number: "\cf2 <<\b0\cf1 acc_no\cf2\b <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 			cout\cf2\b <<\cf5 "Balance Amount: "\cf2 <<\b0\cf1 balance\cf2\b <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 		\cf2\b \}
\par \b0\cf1 		\b int\b0  search\cf2\b (\cf1 int\b0  search_acc\cf2\b ,\b0\cf1  \b int\b0  pin_search\cf2\b )\{
\par \b0\cf1 			\b if\cf2 (\b0\cf1 search_acc \cf2\b ==\b0\cf1  acc_no \cf2\b &&\b0\cf1  pin_search \cf2\b ==\b0\cf1  pin\cf2\b )\{
\par \b0\cf1 				\b return\b0  \cf4 1\cf2\b ;
\par \b0\cf1 			\cf2\b \}
\par \b0\cf1 			\b return\b0  \cf4 0\cf2\b ;
\par \b0\cf1 		\cf2\b \}
\par \b0\cf1 		\b void\b0  withdraw\cf2\b ()\{
\par \b0\cf1 			\b float\b0  withdraw_req\cf2\b ,\b0\cf1  after_balance\cf2\b ;
\par \b0\cf1 			cout\cf2\b <<\cf5 "Enter the amount to withdraw: "\cf2 ;
\par \b0\cf1 			cin\cf2\b >>\b0\cf1 withdraw_req\cf2\b ;
\par 
\par \b0\cf1 			after_balance \cf2\b =\b0\cf1  balance \cf2\b -\b0\cf1  withdraw_req\cf2\b ;
\par \b0\cf1 			\b if\cf2 (\b0\cf1 after_balance \cf2\b >\b0\cf1 min_balance\cf2\b )\{
\par \b0\cf1 				balance \cf2\b =\b0\cf1  after_balance\cf2\b ;
\par \b0\cf1 				cout\cf2\b <<\cf5 "Withdrawl Sucessful."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 			\cf2\b \}
\par \b0\cf1 			\b else\cf2 \{
\par \b0\cf1 				cout\cf2\b <<\cf5 "You don't have sufficient balance."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 			\cf2\b \}
\par \b0\cf1 		\cf2\b \}
\par \b0\cf1 		\b void\b0  deposit\cf2\b ()\{
\par \b0\cf1 			\b float\b0  deposit_req\cf2\b ;
\par \b0\cf1 			cout\cf2\b <<\cf5 "Enter the amount to deposit: "\cf2 ;
\par \b0\cf1 			cin\cf2\b >>\b0\cf1 deposit_req\cf2\b ;
\par \b0\cf1 			balance \cf2\b +=\b0\cf1  deposit_req\cf2\b ;
\par \b0\cf1 			cout\cf2\b <<\cf5 "Amount Deposited Sucessfully."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 		\cf2\b \}
\par \b0\cf1 		\b int\b0  return_current_pin\cf2\b ()\{
\par \b0\cf1 			\b return\b0  pin\cf2\b ;
\par \b0\cf1 		\cf2\b \}
\par \};
\par 
\par \cf1 class\b0  asset\cf2\b :\b0\cf1  \b public\b0  \b virtual\b0  client_details\cf2\b \{
\par \b0\cf1 	\b protected\cf2 :
\par \b0\cf1 		\b char\b0  asset_name\cf2\b [\b0\cf4 100\cf2\b ];
\par \b0\cf1 		\b float\b0  worth\cf2\b ;
\par \b0\cf1 	\b public\cf2 :
\par \b0\cf1 		asset\cf2\b ()\{
\par \b0\cf1 			 worth \cf2\b =\b0\cf1  \cf4 0\cf2\b ;
\par \b0\cf1 		\cf2\b \}
\par \b0\cf1 		\b void\b0  get\cf2\b ()\{
\par \b0\cf1 			cout\cf2\b <<\cf5 "Enter the name of the asset: "\cf2 ;
\par \b0\cf1 			cin\cf2\b >>\b0\cf1 asset_name\cf2\b ;
\par \b0\cf1 			cout\cf2\b <<\cf5 "Enter the worth of the asset: "\cf2 ;
\par \b0\cf1 			cin\cf2\b >>\b0\cf1 worth\cf2\b ;
\par \b0\cf1 		\cf2\b \}
\par \b0\cf1 		\b void\b0  display\cf2\b ()\{
\par \b0\cf1 			cout\cf2\b <<\cf5 "The details of the asset owned by the client is given below."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 			cout\cf2\b <<\cf5 "Name of the asset: "\cf2 <<\b0\cf1 asset_name\cf2\b <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 			cout\cf2\b <<\cf5 "Worth of the asset: "\cf2 <<\b0\cf1 worth\cf2\b <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 		\cf2\b \}
\par \};
\par 
\par \cf1 class\b0  Bank\cf2\b :\b0\cf1  \b public\b0  saving_account\cf2\b ,\b0\cf1  \b public\b0  current_account\cf2\b ,\b0\cf1  \b public\b0  asset\cf2\b \{
\par \b0\cf1 	\b protected\cf2 :
\par \b0\cf1 		\cf3\i // 1 for saving account, 2 for current account, 3 for both saving and current account
\par \i0\cf1 		\b int\b0  account_type\cf2\b ;
\par \b0\cf1 		\b float\b0  loan_amount\cf2\b ;
\par \b0\cf1 		\b float\b0  total_balance\cf2\b ;
\par \b0\cf1 		\b float\b0  net_balance\cf2\b ;
\par \b0\cf1 		\b int\b0  master_pin\cf2\b ;
\par \b0\cf1 	\b public\cf2 :
\par \b0\cf1 		Bank\cf2\b ()\{
\par \b0\cf1 			loan_amount \cf2\b =\b0\cf1  \cf4 0\cf2\b ;
\par \b0\cf1 			total_balance \cf2\b =\b0\cf1  \cf4 0\cf2\b ;
\par \b0\cf1 			net_balance \cf2\b =\b0\cf1  \cf4 0\cf2\b ;
\par \b0\cf1 		\cf2\b \}
\par \b0\cf1 		\b void\b0  get\cf2\b ()\{
\par \b0\cf1 			cout\cf2\b <<\cf5 "Enter your master key for the bank security: "\cf2 ;
\par \b0\cf1 			cin\cf2\b >>\b0\cf1 master_pin\cf2\b ;
\par \b0\cf1 			cout\cf2\b <<\cf5 "Please choose an option from the below menu.\\n \\
\par 			Enter 1 to create a saving account\\n \\
\par 			Enter 2 to create a current account\\n \\
\par 			Enter 3 to create both saving and current account\\n"\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 			cout\cf2\b <<\cf5 "Enter your option here: "\cf2 ;
\par \b0\cf1 			cin\cf2\b >>\b0\cf1 account_type\cf2\b ;
\par \b0\cf1 			
\par 			\b if\cf2 (\b0\cf1 account_type \cf2\b ==\b0\cf1  \cf4 1\cf2\b )\{
\par \b0\cf1 				saving_account\cf2\b ::\b0\cf1 get\cf2\b ();
\par \b0\cf1 			\cf2\b \}
\par \b0\cf1 			\b else\b0  \b if\cf2 (\b0\cf1 account_type \cf2\b ==\b0\cf1  \cf4 2\cf2\b )\{
\par \b0\cf1 				current_account\cf2\b ::\b0\cf1 get\cf2\b ();
\par \b0\cf1 			\cf2\b \}
\par \b0\cf1 			\b else\b0  \b if\b0  \cf2\b (\b0\cf1 account_type \cf2\b ==\b0\cf1  \cf4 3\cf2\b )\{
\par \b0\cf1 				saving_account\cf2\b ::\b0\cf1 get\cf2\b ();
\par \b0\cf1 				cout\cf2\b <<\b0\cf1 endl\cf2\b <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 				current_account\cf2\b ::\b0\cf1 get\cf2\b ();
\par \b0\cf1 			\cf2\b \}
\par \b0\cf1 			\b else\cf2 \{
\par \b0\cf1 				cout\cf2\b <<\cf5 "Please enter a valid option."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 			\cf2\b \}
\par \b0\cf1 		\cf2\b \}
\par \b0\cf1 		\b void\b0  display\cf2\b ()\{
\par \b0\cf1 			\b if\cf2 (\b0\cf1 account_type \cf2\b ==\b0\cf1  \cf4 1\cf2\b )\{
\par \b0\cf1 				saving_account\cf2\b ::\b0\cf1 display\cf2\b ();
\par \b0\cf1 			\cf2\b \}
\par \b0\cf1 			\b else\b0  \b if\cf2 (\b0\cf1 account_type \cf2\b ==\b0\cf1  \cf4 2\cf2\b )\{
\par \b0\cf1 				current_account\cf2\b ::\b0\cf1 display\cf2\b ();
\par \b0\cf1 			\cf2\b \}
\par \b0\cf1 			\b else\b0  \b if\cf2 (\b0\cf1 account_type \cf2\b ==\b0\cf1  \cf4 3\cf2\b )\{
\par \b0\cf1 				saving_account\cf2\b ::\b0\cf1 display\cf2\b ();
\par \b0\cf1 				cout\cf2\b <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 				current_account\cf2\b ::\b0\cf1 display\cf2\b ();
\par \b0\cf1 			\cf2\b \}
\par \b0\cf1 			asset\cf2\b ::\b0\cf1 display\cf2\b ();
\par \b0\cf1 			total_balance \cf2\b =\b0\cf1  saving_account\cf2\b ::\b0\cf1 balance \cf2\b +\b0\cf1  current_account\cf2\b ::\b0\cf1 balance\cf2\b ;
\par \b0\cf1 			cout\cf2\b <<\cf5 "Total Balance: "\cf2 <<\b0\cf1 total_balance\cf2\b <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 			cout\cf2\b <<\cf5 "Loan Amount: "\cf2 <<\b0\cf1 loan_amount\cf2\b <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 			cout\cf2\b <<\cf5 "Net Balance: "\cf2 <<\b0\cf1 total_balance \cf2\b -\b0\cf1  loan_amount\cf2\b <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 		\cf2\b \}
\par \b0\cf1 		\b int\b0  search_master\cf2\b (\cf1 int\b0  master_pin_search\cf2\b )\{
\par \b0\cf1 			\b if\cf2 (\b0\cf1 master_pin_search \cf2\b ==\b0\cf1  master_pin\cf2\b )\{
\par \b0\cf1 				\b return\b0  \cf4 1\cf2\b ;
\par \b0\cf1 			\cf2\b \}
\par \b0\cf1 			\b else\cf2 \{
\par \b0\cf1 				\b return\b0  \cf4 0\cf2\b ;
\par \b0\cf1 			\cf2\b \}
\par \b0\cf1 			
\par 		\cf2\b \}
\par \b0\cf1 		\b float\b0  calculate_optimal_loan\cf2\b ()\{
\par \b0\cf1 			\b float\b0  optimal_loan_amount\cf2\b ;
\par \b0\cf1 			asset\cf2\b ::\b0\cf1 get\cf2\b ();
\par \b0\cf1 			\b float\b0  total_net_worth\cf2\b ;
\par \b0\cf1 			total_net_worth \cf2\b =\b0\cf1  saving_account\cf2\b ::\b0\cf1 balance \cf2\b +\b0\cf1  current_account\cf2\b ::\b0\cf1 balance \cf2\b +\b0\cf1  asset\cf2\b ::\b0\cf1 worth\cf2\b ;
\par \b0\cf1 			optimal_loan_amount \cf2\b =\b0\cf1  \cf4 0.5\cf2\b *\b0\cf1 total_net_worth\cf2\b ;
\par \b0\cf1 			\b return\b0  optimal_loan_amount\cf2\b ;
\par \b0\cf1 			
\par 		\cf2\b \}
\par \b0\cf1 		\b void\b0  loan\cf2\b ()\{
\par \b0\cf1 			\b float\b0  loan_req\cf2\b ;
\par \b0\cf1 			\b int\b0  credit_acc\cf2\b ;
\par \b0\cf1 			cout\cf2\b <<\cf5 "Enter the loan amount you want: "\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 			cin\cf2\b >>\b0\cf1 loan_req\cf2\b ;
\par \b0\cf1 			\b if\cf2 (\b0\cf1 loan_req\cf2\b <\b0\cf1 calculate_optimal_loan\cf2\b ())\{
\par \b0\cf1 				cout\cf2\b <<\cf5 "Enter 1 to credit the loan to your saving account, 2 to credit it to your current account: "\cf2 ;
\par \b0\cf1 				cin\cf2\b >>\b0\cf1 credit_acc\cf2\b ;
\par \b0\cf1 				\b if\cf2 (\b0\cf1 credit_acc \cf2\b ==\b0\cf1  \cf4 1\cf1  \cf2\b &&(\b0\cf1 account_type \cf2\b ==\b0\cf1  \cf4 1\cf1  \cf2\b ||\b0\cf1  account_type \cf2\b ==\b0\cf1  \cf4 3\cf2\b ))\{
\par \b0\cf1 					saving_account\cf2\b ::\b0\cf1 balance \cf2\b +=\b0\cf1  loan_amount\cf2\b ;
\par \b0\cf1 					cout\cf2\b <<\cf5 "Loan granted."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 					loan_amount \cf2\b =\b0\cf1  loan_req\cf2\b ;
\par \b0\cf1 					saving_account\cf2\b ::\b0\cf1 balance \cf2\b +=\b0\cf1  loan_amount\cf2\b ;
\par \b0\cf1 				\cf2\b \}
\par \b0\cf1 				\b else\b0  \b if\b0  \cf2\b (\b0\cf1 credit_acc \cf2\b ==\b0\cf1  \cf4 2\cf1  \cf2\b &&(\b0\cf1 account_type \cf2\b ==\b0\cf1  \cf4 2\cf1  \cf2\b ||\b0\cf1  account_type \cf2\b ==\b0\cf1  \cf4 3\cf2\b ))\{
\par \b0\cf1 					current_account\cf2\b ::\b0\cf1 balance \cf2\b +=\b0\cf1  loan_amount\cf2\b ;
\par \b0\cf1 					cout\cf2\b <<\cf5 "Loan granted."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 					loan_amount \cf2\b =\b0\cf1  loan_req\cf2\b ;
\par \b0\cf1 					current_account\cf2\b ::\b0\cf1 balance \cf2\b +=\b0\cf1  loan_amount\cf2\b ;
\par \b0\cf1 				\cf2\b \}
\par \b0\cf1 				\b else\cf2 \{
\par \b0\cf1 					cout\cf2\b <<\cf5 "Please enter a valid account type."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 				\cf2\b \}
\par \b0\cf1 			\cf2\b \}
\par \b0\cf1 			\b else\cf2 \{
\par \b0\cf1 				cout\cf2\b <<\cf5 "You can't take that much loan."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 				cout\cf2\b <<\cf5 "Loan request rejected."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 			\cf2\b \}
\par \b0\cf1 		\cf2\b \}
\par \b0\cf1 		
\par 		\b int\b0  return_account_type\cf2\b ()\{
\par \b0\cf1 			\b return\b0  account_type\cf2\b ;
\par \b0\cf1 		\cf2\b \}
\par \};
\par 
\par \cf1 int\b0  main\cf2\b ()\{
\par \b0\cf1 	\b static\b0  \b int\b0  user_count \cf2\b =\b0\cf1  \cf2\b -\b0\cf4 1\cf2\b ;
\par \b0\cf1 	\b class\b0  Bank client\cf2\b [\b0\cf1 max_account\cf2\b ];
\par \b0\cf1 	\b int\b0  option \cf2\b =\b0\cf1  \cf2\b -\b0\cf4 1\cf2\b ;
\par \b0\cf1 	\b do\cf2 \{
\par \b0\cf1 		cout\cf2\b <<\cf5 "\\n\\t\\t***Welcome to the Shah Bank Corp**"\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 		cout\cf2\b <<\cf5 "Please choose an option from menu below: \\n \\
\par 		Enter 1 to create a bank account\\n \\
\par 		Enter 2 to check your account profile\\n \\
\par 		Enter 3 to check your balance\\n \\
\par 		Enter 4 to withdraw money\\n \\
\par 		Enter 5 to deposit money\\n \\
\par 		Enter 6 to calculate your loan credit capactiy\\n \\
\par 		Enter 7 to take loan \\n \\
\par 		Enter -1 to quit the program"\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 		cout\cf2\b <<\cf5 "Enter your option here: "\cf2 ;
\par \b0\cf1 		cin\cf2\b >>\b0\cf1 option\cf2\b ;
\par \b0\cf1 		
\par 		\b switch\cf2 (\b0\cf1 option\cf2\b )\{
\par \b0\cf1 			\b case\b0  \cf2\b -\b0\cf4 1\cf2\b :\{
\par \b0\cf1 				cout\cf2\b <<\cf5 "\\nThe program exited successfully."\cf2 ;
\par \b0\cf1 				\b break\cf2 ;
\par \b0\cf1 			\cf2\b \}
\par \b0\cf1 			
\par 			\b case\b0  \cf4 1\cf2\b :\{
\par \b0\cf1 				user_count \cf2\b +=\b0\cf1  \cf4 1\cf2\b ;
\par \b0\cf1 				client\cf2\b [\b0\cf1 user_count\cf2\b ].\b0\cf1 saving_account\cf2\b ::\b0\cf1 client_details\cf2\b ::\b0\cf1 get_details\cf2\b ();
\par \b0\cf1 				client\cf2\b [\b0\cf1 user_count\cf2\b ].\b0\cf1 get\cf2\b ();
\par \b0\cf1 				\b break\cf2 ;
\par \b0\cf1 			\cf2\b \}
\par \b0\cf1 			\b case\b0  \cf4 2\cf1  \cf2\b :\{
\par \b0\cf1 				\b int\b0  master_search_pin\cf2\b ,\b0\cf1  master_found\cf2\b ,\b0\cf1  i\cf2\b ;
\par \b0\cf1 				cout\cf2\b <<\cf5 "Enter the master key for your account: "\cf2 ;
\par \b0\cf1 				cin\cf2\b >>\b0\cf1 master_search_pin\cf2\b ;
\par \b0\cf1 				\b for\cf2 (\b0\cf1 i \cf2\b =\b0\cf1  \cf4 0\cf2\b ;\b0\cf1  i\cf2\b <=\b0\cf1 user_count\cf2\b ;\b0\cf1  i\cf2\b ++)\{
\par \b0\cf1 					master_found \cf2\b =\b0\cf1  client\cf2\b [\b0\cf1 i\cf2\b ].\b0\cf1 search_master\cf2\b (\b0\cf1 master_search_pin\cf2\b );
\par \b0\cf1 					\b if\cf2 (\b0\cf1 master_found \cf2\b ==\b0\cf1  \cf4 1\cf2\b )\{
\par \b0\cf1 						cout\cf2\b <<\cf5 "Account Found."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 						\b break\cf2 ;
\par \b0\cf1 					\cf2\b \}
\par \b0\cf1 				\cf2\b \}
\par \b0\cf1 				\b if\cf2 (\b0\cf1 master_found \cf2\b ==\b0\cf1  \cf4 1\cf2\b )\{
\par \b0\cf1 					client\cf2\b [\b0\cf1 i\cf2\b ].\b0\cf1 saving_account\cf2\b ::\b0\cf1 client_details\cf2\b ::\b0\cf1 display\cf2\b ();
\par \b0\cf1 					client\cf2\b [\b0\cf1 i\cf2\b ].\b0\cf1 display\cf2\b ();
\par \b0\cf1 				\cf2\b \}
\par \b0\cf1 				\b else\b0  \b if\cf2 (\b0\cf1 master_found \cf2\b ==\b0\cf1  \cf4 0\cf2\b )\{
\par \b0\cf1 					cout\cf2\b <<\cf5 "The searched account didn't match with any account."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 				\cf2\b \}
\par \b0\cf1 				\b break\cf2 ;
\par \b0\cf1 			\cf2\b \}
\par \b0\cf1 			\b case\b0  \cf4 3\cf1  \cf2\b :\{
\par \b0\cf1 				\b int\b0  master_search_pin\cf2\b ,\b0\cf1  master_found\cf2\b ,\b0\cf1  i\cf2\b ;
\par \b0\cf1 				cout\cf2\b <<\cf5 "Enter the master key for your account: "\cf2 ;
\par \b0\cf1 				cin\cf2\b >>\b0\cf1 master_search_pin\cf2\b ;
\par \b0\cf1 				\b for\cf2 (\b0\cf1 i \cf2\b =\b0\cf1  \cf4 0\cf2\b ;\b0\cf1  i\cf2\b <=\b0\cf1 user_count\cf2\b ;\b0\cf1  i\cf2\b ++)\{
\par \b0\cf1 					master_found \cf2\b =\b0\cf1  client\cf2\b [\b0\cf1 i\cf2\b ].\b0\cf1 search_master\cf2\b (\b0\cf1 master_search_pin\cf2\b );
\par \b0\cf1 					\b if\cf2 (\b0\cf1 master_found \cf2\b ==\b0\cf1  \cf4 1\cf2\b )\{
\par \b0\cf1 						cout\cf2\b <<\cf5 "Account Found."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 						\b break\cf2 ;
\par \b0\cf1 					\cf2\b \}
\par \b0\cf1 				\cf2\b \}
\par \b0\cf1 				\b if\cf2 (\b0\cf1 master_found \cf2\b ==\b0\cf1  \cf4 1\cf2\b )\{
\par \b0\cf1 					client\cf2\b [\b0\cf1 i\cf2\b ].\b0\cf1 display\cf2\b ();
\par \b0\cf1 				\cf2\b \}
\par \b0\cf1 				\b else\b0  \b if\cf2 (\b0\cf1 master_found \cf2\b ==\b0\cf1  \cf4 0\cf2\b )\{
\par \b0\cf1 					cout\cf2\b <<\cf5 "The searched account didn't match with any account."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 				\cf2\b \}
\par \b0\cf1 				\b break\cf2 ;
\par \b0\cf1 			\cf2\b \}
\par \b0\cf1 			\b case\b0  \cf4 4\cf1  \cf2\b :\{
\par \b0\cf1 				\b int\b0  master_search_pin\cf2\b ,\b0\cf1  master_found\cf2\b ,\b0\cf1  i\cf2\b ,\b0\cf1  withdrawl_acc_type\cf2\b ,\b0\cf1  saving_pin\cf2\b ,\b0\cf1  current_pin\cf2\b ;
\par \b0\cf1 				cout\cf2\b <<\cf5 "Enter the master key for your account: "\cf2 ;
\par \b0\cf1 				cin\cf2\b >>\b0\cf1 master_search_pin\cf2\b ;
\par \b0\cf1 				\b for\cf2 (\b0\cf1 i \cf2\b =\b0\cf1  \cf4 0\cf2\b ;\b0\cf1  i\cf2\b <=\b0\cf1 user_count\cf2\b ;\b0\cf1  i\cf2\b ++)\{
\par \b0\cf1 					master_found \cf2\b =\b0\cf1  client\cf2\b [\b0\cf1 i\cf2\b ].\b0\cf1 search_master\cf2\b (\b0\cf1 master_search_pin\cf2\b );
\par \b0\cf1 					\b if\cf2 (\b0\cf1 master_found \cf2\b ==\b0\cf1  \cf4 1\cf2\b )\{
\par \b0\cf1 						cout\cf2\b <<\cf5 "Account Found."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 						\b break\cf2 ;
\par \b0\cf1 					\cf2\b \}
\par \b0\cf1 				\cf2\b \}
\par \b0\cf1 				\b if\cf2 (\b0\cf1 master_found \cf2\b ==\b0\cf1  \cf4 1\cf2\b )\{
\par 
\par \b0\cf1 					cout\cf2\b <<\cf5 "Enter the account from where you want to withdraw money."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 					cout\cf2\b <<\cf5 "Enter 1 to withdraw from saving account or 2 to withdraw from current account: "\cf2 ;
\par \b0\cf1 					cin\cf2\b >>\b0\cf1 withdrawl_acc_type\cf2\b ;
\par \b0\cf1 					\b if\cf2 (\b0\cf1 withdrawl_acc_type \cf2\b ==\b0\cf1  client\cf2\b [\b0\cf1 i\cf2\b ].\b0\cf1 return_account_type\cf2\b ()\b0\cf1   \cf2\b ||\b0\cf1  client\cf2\b [\b0\cf1 i\cf2\b ].\b0\cf1 return_account_type\cf2\b ()==\b0\cf4 3\cf2\b )\{
\par \b0\cf1 						\b if\cf2 (\b0\cf1 withdrawl_acc_type\cf2\b ==\b0\cf4 1\cf2\b )\{
\par \b0\cf1 							cout\cf2\b <<\cf5 "Enter your saving account PIN: "\cf2 ;
\par \b0\cf1 							cin\cf2\b >>\b0\cf1 saving_pin\cf2\b ;
\par \b0\cf1 							\b if\cf2 (\b0\cf1 saving_pin \cf2\b ==\b0\cf1  client\cf2\b [\b0\cf1 i\cf2\b ].\b0\cf1 saving_account\cf2\b ::\b0\cf1 return_saving_pin\cf2\b ())\{
\par \b0\cf1 								client\cf2\b [\b0\cf1 i\cf2\b ].\b0\cf1 saving_account\cf2\b ::\b0\cf1 withdraw\cf2\b ();
\par \b0\cf1 							\cf2\b \}
\par \b0\cf1 							\b else\cf2 \{
\par \b0\cf1 								cout\cf2\b <<\cf5 "Incorrect PIN. Withdraw Request Rejected."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 							\cf2\b \}
\par \b0\cf1 							
\par 						\cf2\b \}
\par \b0\cf1 						\b else\b0  \b if\cf2 (\b0\cf1 withdrawl_acc_type\cf2\b ==\b0\cf4 2\cf2\b )\{
\par \b0\cf1 							cout\cf2\b <<\cf5 "Enter your current account PIN: "\cf2 ;
\par \b0\cf1 							cin\cf2\b >>\b0\cf1 current_pin\cf2\b ;
\par \b0\cf1 							\b if\cf2 (\b0\cf1 current_pin \cf2\b ==\b0\cf1  client\cf2\b [\b0\cf1 i\cf2\b ].\b0\cf1 current_account\cf2\b ::\b0\cf1 return_current_pin\cf2\b ())\{
\par \b0\cf1 								client\cf2\b [\b0\cf1 i\cf2\b ].\b0\cf1 current_account\cf2\b ::\b0\cf1 withdraw\cf2\b ();
\par \b0\cf1 							\cf2\b \}
\par \b0\cf1 							\b else\cf2 \{
\par \b0\cf1 								cout\cf2\b <<\cf5 "Incorrect PIN. Withdraw Request Rejected."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 							\cf2\b \}
\par \b0\cf1 						\cf2\b \}
\par \b0\cf1 					\cf2\b \}
\par \b0\cf1 					\b else\cf2 \{
\par \b0\cf1 						cout\cf2\b <<\cf5 "You don't have such acccount with the bank."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 					\cf2\b \}
\par \b0\cf1 				\cf2\b \}
\par \b0\cf1 				\b else\b0  \b if\cf2 (\b0\cf1 master_found \cf2\b ==\b0\cf1  \cf4 0\cf2\b )\{
\par \b0\cf1 					cout\cf2\b <<\cf5 "The searched account didn't match with any account."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 				\cf2\b \}
\par \b0\cf1 				
\par 				\b break\cf2 ;
\par \b0\cf1 			\cf2\b \}
\par \b0\cf1 			
\par 			\b case\b0  \cf4 5\cf2\b :\b0\cf1  \cf2\b \{
\par \b0\cf1 				\b int\b0  master_search_pin\cf2\b ,\b0\cf1  master_found\cf2\b ,\b0\cf1  i\cf2\b ,\b0\cf1  deposit_acc_type\cf2\b ;
\par \b0\cf1 				cout\cf2\b <<\cf5 "Enter the master key for your account: "\cf2 ;
\par \b0\cf1 				cin\cf2\b >>\b0\cf1 master_search_pin\cf2\b ;
\par \b0\cf1 				\b for\cf2 (\b0\cf1 i \cf2\b =\b0\cf1  \cf4 0\cf2\b ;\b0\cf1  i\cf2\b <=\b0\cf1 user_count\cf2\b ;\b0\cf1  i\cf2\b ++)\{
\par \b0\cf1 					master_found \cf2\b =\b0\cf1  client\cf2\b [\b0\cf1 i\cf2\b ].\b0\cf1 search_master\cf2\b (\b0\cf1 master_search_pin\cf2\b );
\par \b0\cf1 					\b if\cf2 (\b0\cf1 master_found \cf2\b ==\b0\cf1  \cf4 1\cf2\b )\{
\par \b0\cf1 						cout\cf2\b <<\cf5 "Account Found."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 						\b break\cf2 ;
\par \b0\cf1 					\cf2\b \}
\par \b0\cf1 				\cf2\b \}
\par \b0\cf1 				\b if\cf2 (\b0\cf1 master_found \cf2\b ==\b0\cf1  \cf4 1\cf2\b )\{
\par 
\par \b0\cf1 					cout\cf2\b <<\cf5 "Enter the account to where you want to deposit money."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 					cout\cf2\b <<\cf5 "Enter 1 to deposit to saving account or 2 to deposit to current account: "\cf2 ;
\par \b0\cf1 					cin\cf2\b >>\b0\cf1 deposit_acc_type\cf2\b ;
\par \b0\cf1 					\b if\cf2 (\b0\cf1 deposit_acc_type \cf2\b ==\b0\cf1  client\cf2\b [\b0\cf1 i\cf2\b ].\b0\cf1 return_account_type\cf2\b ()\b0\cf1  \cf2\b ||\b0\cf1  client\cf2\b [\b0\cf1 i\cf2\b ].\b0\cf1 return_account_type\cf2\b ()==\b0\cf4 3\cf1  \cf2\b )\{
\par \b0\cf1 						\b if\cf2 (\b0\cf1 deposit_acc_type\cf2\b ==\b0\cf4 1\cf2\b )\{
\par \b0\cf1 							client\cf2\b [\b0\cf1 i\cf2\b ].\b0\cf1 saving_account\cf2\b ::\b0\cf1 deposit\cf2\b ();
\par \b0\cf1 						\cf2\b \}
\par \b0\cf1 						\b else\b0  \b if\cf2 (\b0\cf1 deposit_acc_type\cf2\b ==\b0\cf4 2\cf2\b )\{
\par \b0\cf1 							client\cf2\b [\b0\cf1 i\cf2\b ].\b0\cf1 current_account\cf2\b ::\b0\cf1 deposit\cf2\b ();
\par \b0\cf1 						\cf2\b \}
\par \b0\cf1 					\cf2\b \}
\par \b0\cf1 					\b else\cf2 \{
\par \b0\cf1 						cout\cf2\b <<\cf5 "You don't have such acccount with the bank."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 					\cf2\b \}
\par \b0\cf1 				\cf2\b \}
\par \b0\cf1 				\b else\b0  \b if\cf2 (\b0\cf1 master_found \cf2\b ==\b0\cf1  \cf4 0\cf2\b )\{
\par \b0\cf1 					cout\cf2\b <<\cf5 "The searched account didn't match with any account."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 				\cf2\b \}
\par \b0\cf1 				
\par 				\b break\cf2 ;
\par \b0\cf1 			\cf2\b \}
\par \b0\cf1 			
\par 			\b case\b0  \cf4 6\cf2\b :\b0\cf1  \cf2\b \{
\par \b0\cf1 				\b float\b0  loan_capacity\cf2\b ;
\par \b0\cf1 				\b int\b0  master_search_pin\cf2\b ,\b0\cf1  master_found\cf2\b ,\b0\cf1  i\cf2\b ;
\par \b0\cf1 				cout\cf2\b <<\cf5 "Enter the master key for your account: "\cf2 ;
\par \b0\cf1 				cin\cf2\b >>\b0\cf1 master_search_pin\cf2\b ;
\par \b0\cf1 				\b for\cf2 (\b0\cf1 i \cf2\b =\b0\cf1  \cf4 0\cf2\b ;\b0\cf1  i\cf2\b <=\b0\cf1 user_count\cf2\b ;\b0\cf1  i\cf2\b ++)\{
\par \b0\cf1 					master_found \cf2\b =\b0\cf1  client\cf2\b [\b0\cf1 i\cf2\b ].\b0\cf1 search_master\cf2\b (\b0\cf1 master_search_pin\cf2\b );
\par \b0\cf1 					\b if\cf2 (\b0\cf1 master_found \cf2\b ==\b0\cf1  \cf4 1\cf2\b )\{
\par \b0\cf1 						cout\cf2\b <<\cf5 "Account Found."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 						\b break\cf2 ;
\par \b0\cf1 					\cf2\b \}
\par \b0\cf1 				\cf2\b \}
\par \b0\cf1 				loan_capacity \cf2\b =\b0\cf1  client\cf2\b [\b0\cf1 i\cf2\b ].\b0\cf1 calculate_optimal_loan\cf2\b ();
\par \b0\cf1 				cout\cf2\b <<\cf5 "Your optimal loan credit capacity is "\cf2 <<\b0\cf1 loan_capacity\cf2\b <<\cf5 "."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 				
\par 				\b break\cf2 ;
\par \b0\cf1 			\cf2\b \}
\par \b0\cf1 			\b case\b0  \cf4 7\cf2\b :\b0\cf1  \cf2\b \{
\par \b0\cf1 				\b int\b0  key\cf2\b ;
\par \b0\cf1 				cout\cf2\b <<\cf5 "You need to a bank account to take loan."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 				cout\cf2\b <<\cf5 "Press -1 to go to main menu and create bank account or any other key to proceed: "\cf2 ;
\par \b0\cf1 				cin\cf2\b >>\b0\cf1 key\cf2\b ;
\par \b0\cf1 				\b if\cf2 (\b0\cf1 key \cf2\b ==\b0\cf1  \cf2\b -\b0\cf4 1\cf2\b )\{
\par \b0\cf1 					cout\cf2\b <<\cf5 "Taking you to main menu."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 					\b break\cf2 ;
\par \b0\cf1 				\cf2\b \}
\par \b0\cf1 				\b else\cf2 \{
\par \b0\cf1 					\b float\b0  loan_capacity\cf2\b ;
\par \b0\cf1 					\b int\b0  master_search_pin\cf2\b ,\b0\cf1  master_found\cf2\b ,\b0\cf1  i\cf2\b ;
\par \b0\cf1 					cout\cf2\b <<\cf5 "Enter the master key for your account: "\cf2 ;
\par \b0\cf1 					cin\cf2\b >>\b0\cf1 master_search_pin\cf2\b ;
\par \b0\cf1 					\b for\cf2 (\b0\cf1 i \cf2\b =\b0\cf1  \cf4 0\cf2\b ;\b0\cf1  i\cf2\b <=\b0\cf1 user_count\cf2\b ;\b0\cf1  i\cf2\b ++)\{
\par \b0\cf1 						master_found \cf2\b =\b0\cf1  client\cf2\b [\b0\cf1 i\cf2\b ].\b0\cf1 search_master\cf2\b (\b0\cf1 master_search_pin\cf2\b );
\par \b0\cf1 						\b if\cf2 (\b0\cf1 master_found \cf2\b ==\b0\cf1  \cf4 1\cf2\b )\{
\par \b0\cf1 							cout\cf2\b <<\cf5 "Account Found."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 							\b break\cf2 ;
\par \b0\cf1 						\cf2\b \}
\par \b0\cf1 					\cf2\b \}
\par \b0\cf1 					\b if\cf2 (\b0\cf1 master_found \cf2\b ==\b0\cf1  \cf4 1\cf2\b )\{
\par \b0\cf1 						client\cf2\b [\b0\cf1 i\cf2\b ].\b0\cf1 loan\cf2\b ();
\par \b0\cf1 					\cf2\b \}
\par \b0\cf1 					\b else\cf2 \{
\par \b0\cf1 						cout\cf2\b <<\cf5 "Account not found. Try again."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 					\cf2\b \}
\par \b0\cf1 				\cf2\b \}
\par \b0\cf1 				
\par 				\b break\cf2 ;
\par \b0\cf1 			\cf2\b \}
\par 
\par \b0\cf1 			
\par 			\b default\cf2 :\{
\par \b0\cf1 				cout\cf2\b <<\cf5 "Please enter a valid option."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 				\b break\cf2 ;
\par \b0\cf1 			\cf2\b \}
\par \b0\cf1 			cout\cf2\b <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 		\cf2\b \}
\par \b0\cf1 	\cf2\b \}
\par \b0\cf1 	\b while\cf2 (\b0\cf1 option \cf2\b !=\b0\cf1  \cf2\b -\b0\cf4 1\cf2\b );
\par \}
\par 
\par }