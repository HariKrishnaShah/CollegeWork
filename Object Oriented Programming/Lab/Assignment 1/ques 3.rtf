{\rtf1\ansi\deff0\deftab720{\fonttbl{\f0\fmodern Consolas;}}
{\colortbl\red0\green128\blue0;\red0\green0\blue0;\red255\green0\blue0;\red0\green120\blue215;\red128\green0\blue128;\red0\green0\blue255;}
{\info{\comment Generated by the SynEdit RTF exporter}
{\title ques 3.rtf}}

\deflang1033\pard\plain\f0\fs26 \cf0 #include <iostream>
\par #include <cstring>
\par #include <string>
\par #include <malloc.h>
\par \cf1\b using\b0  \b namespace\b0  std\cf2\b ;
\par \b0\cf3\i //Coded by Hari Krishna Shah
\par \i0\cf1\b class\b0  books\cf2\b \{
\par \b0\cf1 	\b private\cf2 :
\par \b0\cf1 		\b char\b0  title\cf2\b [\b0\cf4 50\cf2\b ];
\par \b0\cf1 		\b char\b0  author\cf2\b [\b0\cf4 50\cf2\b ];
\par \b0\cf1 		\b char\b0  publication\cf2\b [\b0\cf4 50\cf2\b ];
\par \b0\cf1 		\b int\b0  year_pub\cf2\b ;
\par \b0\cf1 		\b float\b0  price\cf2\b ;
\par \b0\cf1 		\b int\b0  stock_position\cf2\b ;
\par \b0\cf1 	\b public\cf2 :
\par \b0\cf1 		books\cf2\b ()\{
\par \b0\cf1 			year_pub \cf2\b =\b0\cf1  \cf4 2022\cf2\b ;\b0\cf1  \cf3\i // current year
\par \i0\cf1 			stock_position \cf2\b =\b0\cf1  \cf4 0\cf2\b ;\b0\cf1  \cf3\i // until and unless specified
\par \i0\cf1 			strcpy\cf2\b (\b0\cf1 publication\cf2\b ,\b0\cf1  \cf5\b "Shah_Library"\cf2 );\b0\cf1  \cf3\i //default owner and publisher of the book
\par \i0\cf1 		\cf2\b \}
\par \b0\cf1 		\cf2\b ~\b0\cf1 books\cf2\b ()\{
\par \b0\cf1 			\cf3\i // objects are intialized to these data values if they go out of scope. It protects objects from data leak.
\par \i0\cf1 			strcpy\cf2\b (\b0\cf1 title\cf2\b ,\b0\cf1  \cf5\b "XXXXX"\cf2 );
\par \b0\cf1 			strcpy\cf2\b (\b0\cf1 author\cf2\b ,\b0\cf1  \cf5\b "XXXXX"\cf2 );
\par \b0\cf1 			strcpy\cf2\b (\b0\cf1 publication\cf2\b ,\b0\cf1  \cf5\b "XXXXX"\cf2 );
\par \b0\cf1 			price \cf2\b =\b0\cf1  \cf4 0\cf2\b ;
\par \b0\cf1 			price \cf2\b =\b0\cf1  \cf4 99999\cf2\b ;
\par \b0\cf1 			stock_position \cf2\b =\b0\cf1  \cf4 99999\cf2\b ;
\par \b0\cf1 		\cf2\b \}
\par \b0\cf1 		\b void\b0  get_details\cf2\b ();
\par \b0\cf1 		string return_title\cf2\b ();
\par \b0\cf1 		\b void\b0  display\cf2\b ();
\par \b0\cf1 		string return_author\cf2\b ();
\par \b0\cf1 		\b int\b0  return_price\cf2\b ();
\par \b0\cf1 		\b int\b0  request_handle\cf2\b (\cf1 char\b0  book_title\cf2\b [\b0\cf4 50\cf2\b ],\b0\cf1  \b char\b0  book_author\cf2\b [\b0\cf4 50\cf2\b ],\b0\cf1  \b int\b0  required_copies\cf2\b );
\par \b0\cf1 		\b void\b0  display_message\cf2\b (\cf1 int\b0  request\cf2\b ,\b0\cf1  \b int\b0  required_copies\cf2\b );
\par \b0\cf1 		
\par \cf2\b \};
\par \cf1 void\b0  books\cf2\b ::\b0\cf1 get_details\cf2\b ()\{
\par \b0\cf1 			cout\cf2\b <<\cf5 "Enter the title of the book: "\cf2 ;
\par \b0\cf1 			cin\cf2\b >>\b0\cf1 title\cf2\b ;
\par \b0\cf1 			cout\cf2\b <<\cf5 "Enter the author of the book: "\cf2 ;
\par \b0\cf1 			cin\cf2\b >>\b0\cf1 author\cf2\b ;
\par \b0\cf1 			cout\cf2\b <<\cf5 "Enter the publisher of the book: "\cf2 ;
\par \b0\cf1 			cin\cf2\b >>\b0\cf1 publication\cf2\b ;
\par \b0\cf1 			cout\cf2\b <<\cf5 "Enter the year of publication of the book: "\cf2 ;
\par \b0\cf1 			cin\cf2\b >>\b0\cf1 year_pub\cf2\b ;
\par \b0\cf1 			cout\cf2\b <<\cf5 "Enter the price of the book: "\cf2 ;
\par \b0\cf1 			cin\cf2\b >>\b0\cf1 price\cf2\b ;
\par \b0\cf1 			cout\cf2\b <<\cf5 "Enter the number of copies: "\cf2 ;
\par \b0\cf1 			cin\cf2\b >>\b0\cf1 stock_position\cf2\b ;
\par \}
\par \cf1 void\b0  books\cf2\b ::\b0\cf1 display\cf2\b ()\{
\par \b0\cf1 	cout\cf2\b <<\cf5 "Book Title: "\cf2 <<\b0\cf1 title\cf2\b <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 	cout\cf2\b <<\cf5 "Author: "\cf2 <<\b0\cf1 author\cf2\b <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 	cout\cf2\b <<\cf5 "Publisher: "\cf2 <<\b0\cf1 publication\cf2\b <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 	cout\cf2\b <<\cf5 "Year of publication: "\cf2 <<\b0\cf1 year_pub\cf2\b <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 	cout\cf2\b <<\cf5 "Price: "\cf2 <<\b0\cf1 price\cf2\b <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 	cout\cf2\b <<\cf5 "Number of copies available: "\cf2 <<\b0\cf1 stock_position\cf2\b <<\b0\cf1 endl\cf2\b <<\b0\cf1 endl\cf2\b ;
\par \}
\par 
\par \b0\cf1 string books\cf2\b ::\b0\cf1 return_title\cf2\b ()\{
\par \b0\cf1 	\b return\b0  title\cf2\b ;
\par \}
\par \b0\cf1 string books\cf2\b ::\b0\cf1 return_author\cf2\b ()\{
\par \b0\cf1 	\b return\b0  author\cf2\b ;
\par \}
\par \cf1 int\b0  books\cf2\b ::\b0\cf1 return_price\cf2\b ()\{
\par \b0\cf1 	\b return\b0  price\cf2\b ;
\par \}
\par \cf1 int\b0  books\cf2\b ::\b0\cf1 request_handle\cf2\b (\cf1 char\b0  book_title\cf2\b [\b0\cf4 50\cf2\b ],\b0\cf1  \b char\b0  book_author\cf2\b [\b0\cf4 50\cf2\b ],\b0\cf1  \b int\b0  required_copies\cf2\b )\{
\par \b0\cf1 	\b if\cf2 ((\b0\cf1 strcmp\cf2\b (\b0\cf1 book_title\cf2\b ,\b0\cf1  title\cf2\b )==\b0\cf4 0\cf2\b )\b0\cf1  \cf2\b &&\b0\cf1  \cf2\b ((\b0\cf1 strcmp\cf2\b (\b0\cf1 book_author\cf2\b ,\b0\cf1  author\cf2\b )\b0\cf1  \cf2\b ==\b0\cf4 0\cf2\b ))\b0\cf1  \cf2\b &&\b0\cf1  stock_position \cf2\b >=\b0\cf1  required_copies\cf2\b )\{
\par \b0\cf1 		\b return\b0  \cf4 1\cf2\b ;
\par \b0\cf1 	\cf2\b \}
\par \b0\cf1 	\b else\b0  \b if\cf2 ((\b0\cf1 strcmp\cf2\b (\b0\cf1 book_title\cf2\b ,\b0\cf1  title\cf2\b )==\b0\cf4 0\cf2\b )\b0\cf1  \cf2\b &&\b0\cf1  \cf2\b ((\b0\cf1 strcmp\cf2\b (\b0\cf1 book_author\cf2\b ,\b0\cf1  author\cf2\b )\b0\cf1  \cf2\b ==\b0\cf4 0\cf2\b )))\{
\par \b0\cf1 		\b return\b0  \cf4 2\cf2\b ;
\par \b0\cf1 	\cf2\b \}
\par \}
\par 
\par \cf1 void\b0  books\cf2\b ::\b0\cf1 display_message\cf2\b (\cf1 int\b0  request\cf2\b ,\b0\cf1  \b int\b0  required_copies\cf2\b )\{
\par \b0\cf1 	\b if\cf2 (\b0\cf1 request \cf2\b ==\b0\cf1  \cf4 1\cf2\b )\{
\par \b0\cf1 		cout\cf2\b <<\cf5 "\\nThe book "\cf2 <<\b0\cf1 title\cf2\b <<\cf5 " by the author "\cf2 <<\b0\cf1 author\cf2\b <<\cf5 " is available with us."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 		cout\cf2\b <<\cf5 "There are "\cf2 <<\b0\cf1 stock_position\cf2\b <<\cf5 " number of copies available."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 		cout\cf2\b <<\cf5 "The price for the each copy of the book is "\cf2 <<\b0\cf1 price\cf2\b <<\cf5 " . So, total price for "\cf2 <<\b0\cf1 required_copies\cf2\b <<\cf5 " number of copies is Rs "\cf2 <<\b0\cf1 price\cf2\b *\b0\cf1 required_copies\cf2\b <<\cf5 ". "\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 	\cf2\b \}
\par \b0\cf1 	\b else\b0  \b if\cf2 (\b0\cf1 request \cf2\b ==\b0\cf1  \cf4 2\cf2\b )\{
\par \b0\cf1 	cout\cf2\b <<\cf5 "\\nSorry, there are only "\b0\cf1  \cf2\b <<\b0\cf1 stock_position\cf2\b <<\cf5 " number of copies of the book "\cf2 <<\b0\cf1 title\cf2\b <<\cf5 " by the author "\cf2 <<\b0\cf1 author\cf2\b <<\cf5 " available with us."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 	cout\cf2\b <<\cf5 "Required number of copies not available.!!!"\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 	cout\cf2\b <<\cf5 "We are short by "\cf2 <<\b0\cf1 required_copies \cf2\b -\b0\cf1 stock_position\cf2\b <<\cf5 " number of copies."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 	\cf2\b \}
\par \}
\par 
\par 
\par \cf1 int\b0  main\cf2\b ()\{
\par \b0\cf1 	\b class\b0  books \cf2\b *\b0\cf1 b\cf2\b ;
\par \b0\cf1 	b \cf2\b =\b0\cf1  \cf2\b (\cf1 class\b0  books \cf2\b *)\b0\cf1  \cf2\b (\b0\cf1 malloc\cf2\b (\cf1 sizeof\cf2 (\cf1 class\b0  books\cf2\b )));
\par \b0\cf1 	\b static\b0  \b int\b0  book_count \cf2\b =\b0\cf1  \cf4 0\cf2\b ;
\par \b0\cf1 	\b int\b0  temp1_count \cf2\b =\b0\cf1  \cf4 0\cf2\b ,\b0\cf1  temp2_count \cf2\b =\b0\cf1  \cf4 0\cf2\b ;
\par \b0\cf1 	\b int\b0  option\cf2\b ;
\par \b0\cf1 	\b do\cf2 \{
\par \b0\cf1 		cout\cf2\b <<\cf5 "\\t\\tThis program is made by Hari Krishna Shah !!!"\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 		cout\cf2\b <<\cf5 "Welcome to the main menu"\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 		cout\cf2\b <<\cf5 "Enter an option from the menu below\\n \\
\par 		Enter 1 to add books to the database\\n \\
\par 		Enter 2 to display all the books\\n \\
\par 		Enter 3 to sort the book in ascending order\\n \\
\par 		Enter 4 to search the book by author name\\n \\
\par 		Enter 5 to display books whose price is below certain price\\n \\
\par 		Enter 6 to process a book purchase request \\n \\
\par 		Enter -1 to quit the program"\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 		cout\cf2\b <<\cf5 "Enter your option here: "\cf2 ;
\par \b0\cf1 		cin\cf2\b >>\b0\cf1 option\cf2\b ;
\par \b0\cf1 		cout\cf2\b <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 		\b switch\cf2 (\b0\cf1 option\cf2\b )\{
\par \b0\cf1 			\b case\b0  \cf2\b -\b0\cf4 1\cf2\b :\b0\cf1  \cf2\b \{
\par \b0\cf1 				\b break\cf2 ;
\par \b0\cf1 			\cf2\b \}
\par \b0\cf1 			\b case\b0  \cf4 1\cf2\b :\{
\par \b0\cf1 				cout\cf2\b <<\cf5 "Enter the number of books you want to add: "\cf2 ;
\par \b0\cf1 				cin\cf2\b >>\b0\cf1 temp1_count\cf2\b ;
\par \b0\cf1 				book_count \cf2\b +=\b0\cf1  temp1_count\cf2\b ;
\par \b0\cf1 				cout\cf2\b <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 				\b for\cf2 (;\b0\cf1  temp2_count\cf2\b <\b0\cf1 book_count\cf2\b ;\b0\cf1  temp2_count\cf2\b ++)\{
\par \b0\cf1 					cout\cf2\b <<\cf5 "Enter the details for book number "\cf2 <<\b0\cf1 temp2_count\cf2\b +\b0\cf4 1\cf2\b <<\cf5 " :"\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 					b \cf2\b =\b0\cf1  \cf2\b (\cf1 class\b0  books \cf2\b *)\b0\cf1  \cf2\b (\b0\cf1 realloc\cf2\b (\b0\cf1 b\cf2\b ,\b0\cf1  book_count\cf2\b *\cf1 sizeof\cf2 (\cf1 class\b0  books\cf2\b )));
\par \b0\cf1 					b\cf2\b [\b0\cf1 temp2_count\cf2\b ].\b0\cf1 get_details\cf2\b ();
\par \b0\cf1 					cout\cf2\b <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 				\cf2\b \}
\par \b0\cf1 				\b break\cf2 ;
\par \b0\cf1 			\cf2\b \}
\par \b0\cf1 			\b case\b0  \cf4 2\cf2\b :\{
\par \b0\cf1 				\b if\cf2 (\b0\cf1 book_count \cf2\b ==\b0\cf1  \cf4 0\cf2\b )\{
\par \b0\cf1 					cout\cf2\b <<\cf5 "The database is empty. Add some books first."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 					\b break\cf2 ;
\par \b0\cf1 				\cf2\b \}
\par \b0\cf1 				\b for\cf2 (\cf1 int\b0  i \cf2\b =\b0\cf1  \cf4 0\cf2\b ;\b0\cf1  i\cf2\b <\b0\cf1 book_count\cf2\b ;\b0\cf1  i\cf2\b ++)\{
\par \b0\cf1 					cout\cf2\b <<\cf5 "Details for book number "\cf2 <<\b0\cf1 i\cf2\b +\b0\cf4 1\cf2\b <<\cf5 " is given below."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 					b\cf2\b [\b0\cf1 i\cf2\b ].\b0\cf1 display\cf2\b ();
\par \b0\cf1 					cout\cf2\b <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 				\cf2\b \}
\par \b0\cf1 				\b break\cf2 ;
\par \b0\cf1 			\cf2\b \}
\par \b0\cf1 			\b case\b0  \cf4 3\cf2\b :\{
\par \b0\cf1 				\b if\cf2 (\b0\cf1 book_count \cf2\b ==\b0\cf1  \cf4 0\cf2\b )\{
\par \b0\cf1 					cout\cf2\b <<\cf5 "There's isn't any book in the database. Add some books to the database first."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 					\b break\cf2 ;
\par \b0\cf1 				\cf2\b \}
\par \b0\cf1 				\b class\b0  books temp\cf2\b ;
\par \b0\cf1 				\b for\cf2 (\cf1 int\b0  i \cf2\b =\b0\cf1  \cf4 0\cf2\b ;\b0\cf1  i\cf2\b <\b0\cf1 book_count\cf2\b ;\b0\cf1  i\cf2\b ++)\{
\par \b0\cf1 					\b for\cf2 (\cf1 int\b0  j \cf2\b =\b0\cf1  i\cf2\b +\b0\cf4 1\cf2\b ;\b0\cf1  j\cf2\b <\b0\cf1 book_count\cf2\b ;\b0\cf1  j\cf2\b ++)\{
\par \b0\cf1 						\b if\cf2 ((\b0\cf1 b\cf2\b [\b0\cf1 i\cf2\b ].\b0\cf1 return_title\cf2\b ().\b0\cf1 compare\cf2\b (\b0\cf1 b\cf2\b [\b0\cf1 j\cf2\b ].\b0\cf1 return_title\cf2\b ()))>\b0\cf4 0\cf2\b )\{
\par \b0\cf1 							temp \cf2\b =\b0\cf1  b\cf2\b [\b0\cf1 i\cf2\b ];
\par \b0\cf1 							b\cf2\b [\b0\cf1 i\cf2\b ]\b0\cf1  \cf2\b =\b0\cf1  b\cf2\b [\b0\cf1 j\cf2\b ];
\par \b0\cf1 							b\cf2\b [\b0\cf1 j\cf2\b ]\b0\cf1  \cf2\b =\b0\cf1  temp\cf2\b ;
\par \b0\cf1 						\cf2\b \}
\par \b0\cf1 					\cf2\b \}
\par \b0\cf1 				\cf2\b \}
\par \b0\cf1 				cout\cf2\b <<\cf5 "The books have been sorted in ascending order according to book title successfully."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 				\b break\cf2 ;
\par \b0\cf1 			\cf2\b \}
\par 
\par \b0\cf1 			\b case\b0  \cf4 4\cf2\b :\{
\par \b0\cf1 				\b if\cf2 (\b0\cf1 book_count \cf2\b ==\b0\cf1  \cf4 0\cf2\b )\{
\par \b0\cf1 					cout\cf2\b <<\cf5 "\\nThere's isn't any book in the database. Add some books to the database first."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 					\b break\cf2 ;
\par \b0\cf1 				\cf2\b \}
\par \b0\cf1 				\b char\b0  search\cf2\b [\b0\cf4 50\cf2\b ];
\par \b0\cf1 				cout\cf2\b <<\cf5 "Enter the author name to search in the database: "\cf2 ;
\par \b0\cf1 				cin\cf2\b >>\b0\cf1 search\cf2\b ;
\par \b0\cf1 				\b int\b0  flag1 \cf2\b =\b0\cf1  \cf4 0\cf2\b ;
\par \b0\cf1 				\b for\cf2 (\cf1 int\b0  i \cf2\b =\b0\cf1  \cf4 0\cf2\b ;\b0\cf1  i\cf2\b <\b0\cf1 book_count\cf2\b ;\b0\cf1  i\cf2\b ++)\{
\par \b0\cf1 					\b if\cf2 (\b0\cf1 b\cf2\b [\b0\cf1 i\cf2\b ].\b0\cf1 return_author\cf2\b ().\b0\cf1 compare\cf2\b (\b0\cf1 search\cf2\b )==\b0\cf4 0\cf2\b )\{
\par \b0\cf1 						\b if\cf2 (\b0\cf1 flag1 \cf2\b ==\b0\cf1  \cf4 0\cf2\b )\{
\par \b0\cf1 							cout\cf2\b <<\cf5 "\\nFollowing book is authored by "\cf2 <<\b0\cf1 search\cf2\b <<\cf5 "."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 						\cf2\b \}
\par \b0\cf1 						cout\cf2\b <<\cf5 "Book number: "\cf2 <<\b0\cf1 flag1\cf2\b +\b0\cf4 1\cf2\b <<\cf5 "."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 						b\cf2\b [\b0\cf1 i\cf2\b ].\b0\cf1 display\cf2\b ();
\par \b0\cf1 						cout\cf2\b <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 						flag1 \cf2\b +=\b0\cf1  \cf4 1\cf2\b ;
\par \b0\cf1 					\cf2\b \}
\par \b0\cf1 				\cf2\b \}
\par \b0\cf1 				\b if\cf2 (\b0\cf1 flag1 \cf2\b ==\b0\cf1  \cf4 0\cf2\b )\{
\par \b0\cf1 					cout\cf2\b <<\cf5 "There isn't any book authored by "\cf2 <<\b0\cf1 search\cf2\b <<\cf5 " in the database.\\nTry again with another author name."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 				\cf2\b \}
\par \b0\cf1 				\b else\cf2 \{
\par \b0\cf1 					cout\cf2\b <<\cf5 "Total "\cf2 <<\b0\cf1 flag1\cf2\b <<\cf5 " numbers of books were found in the database."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 				\cf2\b \}
\par \b0\cf1 				\b break\cf2 ;
\par \b0\cf1 			\cf2\b \}
\par \b0\cf1 				
\par 			\b case\b0  \cf4 5\cf2\b :
\par \b0\cf1 			\cf2\b \{
\par \b0\cf1 				\b if\cf2 (\b0\cf1 book_count \cf2\b ==\b0\cf1  \cf4 0\cf2\b )\{
\par \b0\cf1 					cout\cf2\b <<\cf5 "There's isn't any book in the database. Add some books to the database first."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 					\b break\cf2 ;
\par \b0\cf1 				\cf2\b \}
\par \b0\cf1 				\b int\b0  price\cf2\b ;
\par \b0\cf1 				cout\cf2\b <<\cf5 "Enter the price to find books below that price: "\cf2 ;
\par \b0\cf1 				cin\cf2\b >>\b0\cf1 price\cf2\b ;
\par \b0\cf1 				\b int\b0  flag \cf2\b =\b0\cf1  \cf4 0\cf2\b ;
\par \b0\cf1 				\b for\cf2 (\cf1 int\b0  i \cf2\b =\b0\cf1  \cf4 0\cf2\b ;\b0\cf1  i\cf2\b <\b0\cf1 book_count\cf2\b ;\b0\cf1  i\cf2\b ++)\{
\par \b0\cf1 					\b if\cf2 (\b0\cf1 b\cf2\b [\b0\cf1 i\cf2\b ].\b0\cf1 return_price\cf2\b ()<\b0\cf1 price\cf2\b )\{
\par \b0\cf1 						cout\cf2\b <<\cf5 "Match Found. Book number: "\cf2 <<\b0\cf1 flag\cf2\b +\b0\cf4 1\cf2\b <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 						b\cf2\b [\b0\cf1 i\cf2\b ].\b0\cf1 display\cf2\b ();
\par \b0\cf1 						flag \cf2\b +=\b0\cf1  \cf4 1\cf2\b ;
\par \b0\cf1 					\cf2\b \}
\par \b0\cf1 				\cf2\b \}
\par \b0\cf1 				\b if\cf2 (\b0\cf1 flag \cf2\b ==\b0\cf1  \cf4 0\cf2\b )\{
\par \b0\cf1 					cout\cf2\b <<\cf5 "There isn't any book below Rs."\cf2 <<\b0\cf1 price\cf2\b <<\cf5 " in the database."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 				\cf2\b \}
\par \b0\cf1 				\b break\cf2 ;
\par \b0\cf1 			\cf2\b \}
\par \b0\cf1 			\b case\b0  \cf4 6\cf2\b :\{
\par \b0\cf1 				\b if\cf2 (\b0\cf1 book_count \cf2\b ==\b0\cf1  \cf4 0\cf2\b )\{
\par \b0\cf1 					cout\cf2\b <<\cf5 "There book database is empty. Add some books first."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 				\cf2\b \}
\par \b0\cf1 				\b else\cf2 \{
\par \b0\cf1 					\b char\b0  book_title\cf2\b [\b0\cf4 50\cf2\b ],\b0\cf1  book_author\cf2\b [\b0\cf4 50\cf2\b ];
\par \b0\cf1 					\b int\b0  required_copies\cf2\b ,\b0\cf1  flag \cf2\b =\b0\cf1  \cf4 0\cf2\b ,\b0\cf1  result\cf2\b =\b0\cf4 0\cf2\b ;
\par \b0\cf1 					cout\cf2\b <<\cf5 "Enter the title of the book you want to purchase: "\cf2 ;
\par \b0\cf1 					cin\cf2\b >>\b0\cf1 book_title\cf2\b ;
\par \b0\cf1 					cout\cf2\b <<\cf5 "Enter the author of the book: "\cf2 ;
\par \b0\cf1 					cin\cf2\b >>\b0\cf1 book_author\cf2\b ;
\par \b0\cf1 					cout\cf2\b <<\cf5 "Enter the required number of copies: "\cf2 ;
\par \b0\cf1 					cin\cf2\b >>\b0\cf1 required_copies\cf2\b ;
\par \b0\cf1 					\b for\cf2 (\cf1 int\b0  i \cf2\b =\b0\cf1  \cf4 0\cf2\b ;\b0\cf1  i\cf2\b <\b0\cf1 book_count\cf2\b ;\b0\cf1  i\cf2\b ++)\{
\par \b0\cf1 						result \cf2\b =\b0\cf1  b\cf2\b [\b0\cf1 i\cf2\b ].\b0\cf1 request_handle\cf2\b (\b0\cf1 book_title\cf2\b ,\b0\cf1  book_author\cf2\b ,\b0\cf1  required_copies\cf2\b );
\par \b0\cf1 						\b if\cf2 (\b0\cf1 result \cf2\b ==\b0\cf1  \cf4 1\cf1  \cf2\b ||\b0\cf1  result \cf2\b ==\b0\cf1  \cf4 2\cf2\b )\{
\par \b0\cf1 							b\cf2\b [\b0\cf1 i\cf2\b ].\b0\cf1 display_message\cf2\b (\b0\cf1 result\cf2\b ,\b0\cf1  required_copies\cf2\b );
\par \b0\cf1 							flag \cf2\b +=\b0\cf1  \cf4 1\cf2\b ;
\par \b0\cf1 							\b break\cf2 ;
\par \b0\cf1 						\cf2\b \}
\par \b0\cf1 					\cf2\b \}
\par \b0\cf1 					\b if\cf2 (\b0\cf1 flag \cf2\b ==\b0\cf1  \cf4 0\cf2\b )\{
\par \b0\cf1 						cout\cf2\b <<\cf5 "\\nSTOCK- NOT Available. YET TO COME."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 					\cf2\b \}
\par \b0\cf1 			\cf2\b \}
\par \b0\cf1 				\b break\cf2 ;
\par \b0\cf1 			\cf2\b \}
\par \b0\cf1 			\b default\cf2 :\{
\par \b0\cf1 				cout\cf2\b <<\cf5 "Enter a valid option and try again."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 				\b break\cf2 ;
\par \b0\cf1 			\cf2\b \}
\par \b0\cf1 				
\par 		\cf2\b \}
\par \b0\cf1 		cout\cf2\b <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 	\cf2\b \}
\par \b0\cf1 	\b while\cf2 (\b0\cf1 option \cf2\b !=\b0\cf1  \cf2\b -\b0\cf4 1\cf2\b );
\par \b0\cf1 	cout\cf2\b <<\cf5 "Thank you for using the program.\\nPlease drop a feedback or a comment."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 	
\par 	\b return\b0  \cf4 0\cf2\b ;
\par \}
\par }