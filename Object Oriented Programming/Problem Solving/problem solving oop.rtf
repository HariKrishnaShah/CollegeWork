{\rtf1\ansi\deff0\deftab720{\fonttbl{\f0\fmodern Consolas;}}
{\colortbl\red0\green128\blue0;\red0\green0\blue0;\red255\green0\blue0;\red0\green120\blue215;\red128\green0\blue128;\red0\green0\blue255;}
{\info{\comment Generated by the SynEdit RTF exporter}
{\title problem solving oop.rtf}}

\deflang1033\pard\plain\f0\fs26 \cf0 #include <iostream>
\par #include <malloc.h>
\par #include <string.h>
\par \cf1\b using\b0  \b namespace\b0  std\cf2\b ;
\par 
\par \b0\cf3\i /*Forward declaration of class cart so that class inventory can know that class cart exists somewhere
\par in the program and the class cart is its friend.*/
\par \i0\cf1\b class\b0  cart\cf2\b ;
\par \cf1 class\b0  inventory\cf2\b \{
\par \b0\cf1 	\cf3\i // making class cart as a friend class of class inventory so as to access the private data members of inventory class.
\par \i0\cf1 	\b friend\b0  \b class\b0  cart\cf2\b ;\b0\cf1  
\par 	\b private\cf2 :
\par \b0\cf1 		\b char\b0  product_name\cf2\b [\b0\cf4 100\cf2\b ];
\par \b0\cf1 		\b float\b0  price\cf2\b ;
\par \b0\cf1 		\b int\b0  reference_no\cf2\b ;
\par \b0\cf1 	\b public\cf2 :
\par \b0\cf1 		\b void\b0  get_details\cf2\b (\cf1 char\cf2 [],\b0\cf1  \b float\cf2 ,\b0\cf1  \b int\cf2 );
\par \b0\cf1 		\b void\b0  display_inventory\cf2\b ();
\par \b0\cf1 		\b int\b0  check_reference\cf2\b (\cf1 int\b0  cart_ref\cf2\b );
\par \b0\cf1 	
\par \cf2\b \};
\par \cf1 int\b0  inventory\cf2\b ::\b0\cf1 check_reference\cf2\b (\cf1 int\b0  cart_ref\cf2\b )\{
\par \b0\cf1 	\b if\cf2 (\b0\cf1 reference_no \cf2\b ==\b0\cf1  cart_ref\cf2\b )\{
\par \b0\cf1 		\b return\b0  \cf4 1\cf2\b ;
\par \b0\cf1 	\cf2\b \}
\par \b0\cf1 	\b else\cf2 \{
\par \b0\cf1 		\b return\b0  \cf4 0\cf2\b ;
\par \b0\cf1 	\cf2\b \}
\par \}
\par \cf1 class\b0  cart\cf2\b \{
\par \b0\cf1 	\b private\cf2 :
\par \b0\cf1 		\cf3\i // creating int array to store reference numbers of the added items in the cart.
\par \i0\cf1 		\b int\b0  \cf2\b *\b0\cf1 cart_items\cf2\b ;\b0\cf1  
\par 		\b float\b0  total_price\cf2\b ;
\par \b0\cf1 	\b public\cf2 :
\par \b0\cf1 		\cf3\i //Creating a constructor to dynamically allocate memory for the cart_items;
\par \i0\cf1 		cart\cf2\b ()\{
\par \b0\cf1 			\cf3\i // Default size of cart_items is enough to store 10 int numbers i.e 40 bytes total.
\par \i0\cf1 			cart_items \cf2\b =\b0\cf1  \cf2\b (\cf1 int\b0  \cf2\b *)\b0\cf1  \cf2\b (\b0\cf1 malloc\cf2\b (\b0\cf4 10\cf1  \cf2\b *\b0\cf1  \b sizeof\cf2 (\cf1 int\cf2 )));
\par \b0\cf1 			total_price \cf2\b =\b0\cf1  \cf4 0\cf2\b ;
\par \b0\cf1 		\cf2\b \}
\par \b0\cf1 		\cf2\b ~\b0\cf1 cart\cf2\b ()\{
\par \b0\cf1 			free\cf2\b (\b0\cf1 cart_items\cf2\b );
\par \b0\cf1 		\cf2\b \}
\par \b0\cf1 		\b void\b0  add_item\cf2\b (\cf1 int\cf2 ,\b0\cf1  \b int\cf2 );
\par \b0\cf1 		\b void\b0  display_cart\cf2\b (\cf1 int\cf2 ,\b0\cf1  \b class\b0  inventory p\cf2\b []);
\par \b0\cf1 		\b void\b0  check_out\cf2\b ();
\par \};
\par 
\par \cf1 void\b0  inventory\cf2\b ::\b0\cf1 get_details\cf2\b (\cf1 char\b0  name\cf2\b [\b0\cf4 100\cf2\b ],\b0\cf1  \b float\b0  p_price\cf2\b ,\b0\cf1  \b int\b0  ref_no\cf2\b )\{
\par \b0\cf1 	strcpy\cf2\b (\b0\cf1 product_name\cf2\b ,\b0\cf1  name\cf2\b );
\par \b0\cf1 	price \cf2\b =\b0\cf1  p_price\cf2\b ;
\par \b0\cf1 	reference_no \cf2\b =\b0\cf1  ref_no\cf2\b ;
\par \}
\par 
\par \cf1 void\b0  inventory\cf2\b ::\b0\cf1 display_inventory\cf2\b ()\{
\par \b0\cf1 	cout\cf2\b <<\cf5 "Product Name: "\cf2 <<\b0\cf1 product_name\cf2\b <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 	cout\cf2\b <<\cf5 "Price: "\cf2 <<\b0\cf1 price\cf2\b <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 	cout\cf2\b <<\cf5 "Reference Number: "\cf2 <<\b0\cf1 reference_no\cf2\b ;
\par \}
\par 
\par \cf1 void\b0  cart\cf2\b ::\b0\cf1 add_item\cf2\b (\cf1 int\b0  cart_ref\cf2\b ,\b0\cf1  \b int\b0  cart_count\cf2\b )\{
\par \b0\cf1 	cart_items\cf2\b [\b0\cf1 cart_count \cf2\b +\b0\cf1  \cf4 1\cf2\b ]\b0\cf1  \cf2\b =\b0\cf1  cart_ref\cf2\b ;
\par \b0\cf1 	\cf3\i // Dynamically allocating memory for cart_item of the class cart
\par \i0\cf1 	cart_items \cf2\b =\b0\cf1  \cf2\b (\cf1 int\b0  \cf2\b *)\b0\cf1  \cf2\b (\b0\cf1 realloc\cf2\b (\b0\cf1 cart_items\cf2\b ,\b0\cf1  \cf2\b (\b0\cf1 cart_count \cf2\b +\b0\cf1  \cf4 10\cf2\b )\b0\cf1  \cf2\b *\b0\cf1  \b sizeof\cf2 (\cf1 int\cf2 )));
\par \b0\cf1 	cout\cf2\b <<\cf5 "Item added to your cart successfully."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \}
\par 
\par 
\par \cf1 void\b0  cart\cf2\b ::\b0\cf1 display_cart\cf2\b (\cf1 int\b0  cart_count\cf2\b ,\b0\cf1  \b class\b0  inventory p\cf2\b [])\{
\par \b0\cf1 	\b float\b0  temp_price \cf2\b =\b0\cf1  \cf4 0\cf2\b ;
\par \b0\cf1 	\b for\cf2 (\cf1 int\b0  i \cf2\b =\b0\cf1  \cf4 0\cf2\b ;\b0\cf1  i\cf2\b <=\b0\cf1 cart_count\cf2\b ;\b0\cf1  i\cf2\b ++)\{
\par \b0\cf1 		cout\cf2\b <<\cf5 "Item number "\cf2 <<\b0\cf1  i\cf2\b +\b0\cf4 1\cf2\b <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 		\b for\cf2 (\cf1 int\b0  j \cf2\b =\b0\cf1  \cf4 0\cf2\b ;\b0\cf1  j\cf2\b <\b0\cf4 5\cf2\b ;\b0\cf1  j\cf2\b ++)\{
\par \b0\cf1 			\b if\cf2 (\b0\cf1 p\cf2\b [\b0\cf1 j\cf2\b ].\b0\cf1 reference_no \cf2\b ==\b0\cf1  cart_items\cf2\b [\b0\cf1 i\cf2\b ])\{
\par \b0\cf1 				p\cf2\b [\b0\cf1 j\cf2\b ].\b0\cf1 display_inventory\cf2\b ();
\par \b0\cf1 				temp_price \cf2\b +=\b0\cf1  p\cf2\b [\b0\cf1 j\cf2\b ].\b0\cf1 price\cf2\b ;
\par \b0\cf1 				cout\cf2\b <<\b0\cf1 endl\cf2\b <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 			\cf2\b \}
\par \b0\cf1 		\cf2\b \}
\par \b0\cf1 	\cf2\b \}
\par \b0\cf1 	total_price \cf2\b =\b0\cf1  temp_price\cf2\b ;
\par \b0\cf1 	cout\cf2\b <<\cf5 "Total Price is RS "\cf2 <<\b0\cf1 total_price\cf2\b <<\b0\cf1 endl\cf2\b ;
\par \}
\par \cf1 void\b0  cart\cf2\b ::\b0\cf1 check_out\cf2\b ()\{
\par \b0\cf1 	cout\cf2\b <<\cf5 "Thank you for shopping with us. !"\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 	total_price \cf2\b =\b0\cf1  \cf4 0\cf2\b ;
\par \}
\par 
\par \cf1 int\b0  main\cf2\b ()\{
\par \b0\cf1 	\b class\b0  inventory p\cf2\b [\b0\cf4 5\cf2\b ];
\par \b0\cf1 	\b class\b0  cart cart_obj\cf2\b ;
\par \b0\cf1 	\b int\b0  cart_ref\cf2\b ,\b0\cf1  cart_count \cf2\b =\b0\cf1  \cf2\b -\b0\cf4 1\cf2\b ;\b0\cf1  \cf3\i //cart_count is -1 signified the cart is emoty.
\par \i0\cf1 	p\cf2\b [\b0\cf4 0\cf2\b ].\b0\cf1 get_details\cf2\b (\cf5 "Atheletic Shoes"\cf2 ,\b0\cf1  \cf4 2500\cf2\b ,\b0\cf1  \cf4 1\cf2\b );
\par \b0\cf1 	p\cf2\b [\b0\cf4 1\cf2\b ].\b0\cf1 get_details\cf2\b (\cf5 "Skipping Rope"\cf2 ,\b0\cf1  \cf4 500\cf2\b ,\b0\cf1  \cf4 2\cf2\b );
\par \b0\cf1 	p\cf2\b [\b0\cf4 2\cf2\b ].\b0\cf1 get_details\cf2\b (\cf5 "Cricket Bat"\cf2 ,\b0\cf1  \cf4 1500\cf2\b ,\b0\cf1  \cf4 3\cf2\b );
\par \b0\cf1 	p\cf2\b [\b0\cf4 3\cf2\b ].\b0\cf1 get_details\cf2\b (\cf5 "Football"\cf2 ,\b0\cf1  \cf4 500\cf2\b ,\b0\cf1  \cf4 4\cf2\b );
\par \b0\cf1 	p\cf2\b [\b0\cf4 4\cf2\b ].\b0\cf1 get_details\cf2\b (\cf5 "Baseball Bat"\cf2 ,\b0\cf1  \cf4 1800\cf2\b ,\b0\cf1  \cf4 5\cf2\b );
\par 
\par \b0\cf1 	\b int\b0  option \cf2\b =\b0\cf1  \cf4 0\cf2\b ;
\par \b0\cf1 	\b while\cf2 (\b0\cf1 option \cf2\b !=\b0\cf1  \cf2\b -\b0\cf4 1\cf2\b )\{
\par \b0\cf1 		cout\cf2\b <<\cf5 "\\t\\t\\t***Welcome to the Shah Sports Store***\\n"\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 		cout\cf2\b <<\cf5 "The following products are available with us currently."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 		\b for\cf2 (\cf1 int\b0  i \cf2\b =\b0\cf1  \cf4 0\cf2\b ;\b0\cf1  i\cf2\b <\b0\cf4 5\cf2\b ;\b0\cf1  i\cf2\b ++)\{
\par \b0\cf1 			cout\cf2\b <<\cf5 "Product Number - "\cf2 <<\b0\cf1 i\cf2\b +\b0\cf4 1\cf2\b <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 			p\cf2\b [\b0\cf1 i\cf2\b ].\b0\cf1 display_inventory\cf2\b ();
\par \b0\cf1 			cout\cf2\b <<\b0\cf1 endl\cf2\b <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 		\cf2\b \}
\par \b0\cf1 		cout\cf2\b <<\cf5 "Please select an option from the menu below:\\n \\
\par 		Enter 1 to add items to your cart\\n \\
\par 		Enter 2 to view your cart\\n \\
\par 		Enter 3 to checkout\\n \\
\par 		Enter -1 to exit the store"\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 		cout\cf2\b <<\cf5 "Enter your option here: "\cf2 ;
\par \b0\cf1 		cin\cf2\b >>\b0\cf1 option\cf2\b ;
\par 
\par \b0\cf1 		\b switch\cf2 (\b0\cf1 option\cf2\b )\{
\par \b0\cf1 			\b case\b0  \cf2\b -\b0\cf4 1\cf2\b :\{
\par \b0\cf1 				cout\cf2\b <<\cf5 "Thank You for shopping with us."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 				\b break\cf2 ;
\par \b0\cf1 			\cf2\b \}
\par \b0\cf1 			\b case\b0  \cf4 1\cf2\b :\{
\par \b0\cf1 				\b int\b0  flag \cf2\b =\b0\cf1  \cf4 0\cf2\b ;
\par \b0\cf1 				cout\cf2\b <<\cf5 "Enter the reference number of the product that you want to add in your cart: "\cf2 ;
\par \b0\cf1 				cin\cf2\b >>\b0\cf1 cart_ref\cf2\b ;
\par \b0\cf1 				\b for\cf2 (\cf1 int\b0  i \cf2\b =\b0\cf1  \cf4 0\cf2\b ;\b0\cf1  i\cf2\b <\b0\cf4 5\cf2\b ;\b0\cf1  i\cf2\b ++)\{
\par \b0\cf1 					flag \cf2\b =\b0\cf1  p\cf2\b [\b0\cf1 i\cf2\b ].\b0\cf1 check_reference\cf2\b (\b0\cf1 cart_ref\cf2\b );
\par \b0\cf1 					\b if\cf2 (\b0\cf1 flag \cf2\b ==\b0\cf1  \cf4 1\cf2\b )\{
\par \b0\cf1 						\b break\cf2 ;
\par \b0\cf1 					\cf2\b \}
\par \b0\cf1 				\cf2\b \}
\par \b0\cf1 				\b if\cf2 (\b0\cf1 flag \cf2\b ==\b0\cf1  \cf4 0\cf2\b )\{
\par \b0\cf1 					cout\cf2\b <<\cf5 "Invalid Reference number. Try adding the item again."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 				\cf2\b \}
\par \b0\cf1 				\b else\cf2 \{
\par \b0\cf1 					cart_obj\cf2\b .\b0\cf1 add_item\cf2\b (\b0\cf1 cart_ref\cf2\b ,\b0\cf1  cart_count\cf2\b );
\par \b0\cf1 					cart_count \cf2\b +=\b0\cf1  \cf4 1\cf2\b ;
\par \b0\cf1 				\cf2\b \}
\par \b0\cf1 				\b break\cf2 ;
\par \b0\cf1 			\cf2\b \}
\par \b0\cf1 			
\par 			\b case\b0  \cf4 2\cf2\b :\{
\par \b0\cf1 				\b if\cf2 (\b0\cf1 cart_count \cf2\b ==\b0\cf1  \cf2\b -\b0\cf4 1\cf2\b )\{
\par \b0\cf1 					cout\cf2\b <<\cf5 "The cart is empty. Please add some items in your cart first."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 				\cf2\b \}
\par \b0\cf1 				\b else\cf2 \{
\par \b0\cf1 					cart_obj\cf2\b .\b0\cf1 display_cart\cf2\b (\b0\cf1 cart_count\cf2\b ,\b0\cf1  p\cf2\b );
\par \b0\cf1 				\cf2\b \}
\par \b0\cf1 				
\par 				\b break\cf2 ;
\par \b0\cf1 			\cf2\b \}
\par \b0\cf1 			\b case\b0  \cf4 3\cf2\b :\{
\par \b0\cf1 				\b if\cf2 (\b0\cf1 cart_count \cf2\b ==\b0\cf1  \cf2\b -\b0\cf4 1\cf2\b )\{
\par \b0\cf1 					cout\cf2\b <<\cf5 "The cart is empty. Please add some items in your cart first."\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 				\cf2\b \}
\par \b0\cf1 				\b else\cf2 \{
\par \b0\cf1 					cart_obj\cf2\b .\b0\cf1 display_cart\cf2\b (\b0\cf1 cart_count\cf2\b ,\b0\cf1  p\cf2\b );
\par \b0\cf1 					cart_obj\cf2\b .\b0\cf1 check_out\cf2\b ();
\par \b0\cf1 				\cf2\b \}
\par \b0\cf1 				\b break\cf2 ;
\par \b0\cf1 			\cf2\b \}
\par \b0\cf1 			
\par 		\cf2\b \}
\par \b0\cf1 	\cf2\b \}
\par \b0\cf1 	\b return\b0  \cf4 0\cf2\b ;
\par \}
\par }