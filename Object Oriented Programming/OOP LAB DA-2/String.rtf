{\rtf1\ansi\deff0\deftab720{\fonttbl{\f0\fmodern Consolas;}}
{\colortbl\red0\green128\blue0;\red0\green0\blue0;\red255\green0\blue0;\red128\green0\blue128;\red0\green120\blue215;\red0\green0\blue255;}
{\info{\comment Generated by the SynEdit RTF exporter}
{\title String.rtf}}

\deflang1033\pard\plain\f0\fs26 \cf0 #include<iostream>
\par #include<string.h>
\par \cf1\b using\b0  \b namespace\b0  std\cf2\b ;
\par 
\par \cf1 class\b0  string_class
\par \cf2\b \{
\par \b0\cf1         \b char\b0  string\cf2\b [\b0\cf3 100\cf2\b ];
\par \b0\cf1     \b public\cf2 :
\par \b0\cf1         \b void\b0  \b operator\cf2 !();\b0\cf1     \cf4\i //Overloaded '!' Operator
\par \i0\cf1         \b void\b0  get_details\cf2\b ()
\par \b0\cf1         \cf2\b \{
\par \b0\cf1                 cout\cf2\b <<\cf5 "\\nEnter the string:  "\cf2 ;
\par \b0\cf1                 cin\cf2\b >>\b0\cf1 string\cf2\b ;
\par \b0\cf1         \cf2\b \}
\par \b0\cf1         \b void\b0  display_string\cf2\b ()
\par \b0\cf1         \cf2\b \{
\par \b0\cf1                 cout\cf2\b <<\b0\cf1 string\cf2\b ;
\par \b0\cf1         \cf2\b \}
\par \};
\par \cf1 void\b0  string_class\cf2\b ::\cf1 operator\cf2 !()
\par \{
\par \b0\cf1 	cout\cf2\b <<\cf5 "\\n\\n The reversed string is given below:  "\cf2 <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1 	\b int\b0  i \cf2\b =\b0\cf1  \cf3 0\cf2\b ;
\par 
\par \b0\cf1         \b while\cf2 (\b0\cf1 string\cf2\b [\b0\cf1 i\cf2\b ]\b0\cf1  \cf2\b !=\b0\cf1  '\\0'\cf2\b )
\par \b0\cf1         \cf2\b \{
\par \b0\cf1                 \b if\cf2 (\b0\cf1 string\cf2\b [\b0\cf1 i\cf2\b ]>=\b0\cf3 65\cf2\b &&\b0\cf1 string\cf2\b [\b0\cf1 i\cf2\b ]<=\b0\cf3 96\cf2\b )
\par \b0\cf1                 \cf2\b \{
\par \b0\cf1                         cout\cf2\b <<\cf1 char\cf2 (\b0\cf1 string\cf2\b [\b0\cf1 i\cf2\b ]+\b0\cf3 32\cf2\b );
\par \b0\cf1                 \cf2\b \}
\par \b0\cf1                 \b else\b0  \b if\cf2 (\b0\cf1 string\cf2\b [\b0\cf1 i\cf2\b ]>=\b0\cf3 97\cf2\b &&\b0\cf1 string\cf2\b [\b0\cf1 i\cf2\b ]<=\b0\cf3 122\cf2\b )
\par \b0\cf1                 \cf2\b \{
\par \b0\cf1                         cout\cf2\b <<\cf1 char\cf2 (\b0\cf1 string\cf2\b [\b0\cf1 i\cf2\b ]-\b0\cf3 32\cf2\b );
\par \b0\cf1                 \cf2\b \}
\par \b0\cf1                 i\cf2\b ++;
\par \b0\cf1         \cf2\b \}
\par \}
\par \cf1 int\b0  main\cf2\b ()
\par \{
\par \b0\cf1 	\b class\b0  string_class str\cf2\b ;
\par \b0\cf1 	str\cf2\b .\b0\cf1 get_details\cf2\b ();
\par \b0\cf1     cout\cf2\b <<\cf5 "\\n\\nThe entered string is  :  "\cf2 ;
\par \b0\cf1     str\cf2\b .\b0\cf1 display_string\cf2\b ();
\par \b0\cf1     \cf2\b !\b0\cf1 str\cf2\b ;
\par \b0\cf1     \b return\b0  \cf3 0\cf2\b ;
\par \}
\par }