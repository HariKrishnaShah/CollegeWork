{\rtf1\ansi\deff0\deftab720{\fonttbl{\f0\fmodern Consolas;}}
{\colortbl\red0\green128\blue0;\red0\green0\blue0;\red255\green0\blue0;\red0\green120\blue215;\red128\green0\blue128;\red0\green0\blue255;}
{\info{\comment Generated by the SynEdit RTF exporter}
{\title Ques 2 Matrix operation with overloaded function.rtf}}

\deflang1033\pard\plain\f0\fs26 \cf0 #include<iostream>
\par \cf1\b using\b0  \b namespace\b0  std\cf2\b ;
\par \b0\cf3\i //Coded by Hari Krishna Shah
\par \i0\cf1  \b class\b0  mat
\par \cf2\b \{
\par \b0\cf1    \b private\cf2 :
\par \b0\cf1      \b int\b0  s\cf2\b [\b0\cf4 10\cf2\b ][\b0\cf4 10\cf2\b ];
\par \b0\cf1      \b int\b0  r\cf2\b ,\b0\cf1 c\cf2\b ;
\par \b0\cf1    \b public\cf2 :
\par \b0\cf1      \b void\b0  show\cf2\b ();
\par \b0\cf1      mat \b operator\b0  \cf2\b +(\b0\cf1 mat\cf2\b );
\par \b0\cf1      mat \b operator\b0  \cf2\b *(\b0\cf1 mat\cf2\b );
\par \b0\cf1      \b void\b0  read\cf2\b ();
\par \};
\par \b0\cf1 mat mat\cf2\b ::\cf1 operator\cf2 +(\b0\cf1 mat obj\cf2\b )
\par \{
\par \b0\cf1     mat t\cf2\b ;
\par \b0\cf1     t\cf2\b .\b0\cf1 r\cf2\b =\b0\cf1 r\cf2\b ;
\par \b0\cf1     t\cf2\b .\b0\cf1 c\cf2\b =\b0\cf1 c\cf2\b ;
\par \b0\cf1     \b for\cf2 (\cf1 int\b0  i\cf2\b =\b0\cf4 0\cf2\b ;\b0\cf1 i\cf2\b <\b0\cf1 t\cf2\b .\b0\cf1 r\cf2\b ;\b0\cf1 i\cf2\b ++)
\par \b0\cf1          \b for\cf2 (\cf1 int\b0  j\cf2\b =\b0\cf4 0\cf2\b ;\b0\cf1 j\cf2\b <\b0\cf1 t\cf2\b .\b0\cf1 c\cf2\b ;\b0\cf1 j\cf2\b ++)\{
\par \b0\cf1          	t\cf2\b .\b0\cf1 s\cf2\b [\b0\cf1 i\cf2\b ][\b0\cf1 j\cf2\b ]=\b0\cf1 s\cf2\b [\b0\cf1 i\cf2\b ][\b0\cf1 j\cf2\b ]+\b0\cf1 obj\cf2\b .\b0\cf1 s\cf2\b [\b0\cf1 i\cf2\b ][\b0\cf1 j\cf2\b ];
\par \b0\cf1 		 \cf2\b \}
\par \b0\cf1 		 \b return\b0  t\cf2\b ;
\par \}
\par \b0\cf1 mat mat\cf2\b ::\cf1 operator\cf2 *(\b0\cf1 mat obj\cf2\b )
\par \{
\par \b0\cf1     mat t\cf2\b ;
\par \b0\cf1     t\cf2\b .\b0\cf1 r\cf2\b =\b0\cf1 r\cf2\b ;
\par \b0\cf1     t\cf2\b .\b0\cf1 c\cf2\b =\b0\cf1 obj\cf2\b .\b0\cf1 c\cf2\b ;
\par \b0\cf1     \b for\cf2 (\cf1 int\b0  i\cf2\b =\b0\cf4 0\cf2\b ;\b0\cf1 i\cf2\b <\b0\cf1 t\cf2\b .\b0\cf1 r\cf2\b ;\b0\cf1 i\cf2\b ++)\{
\par \b0\cf1     	\b for\cf2 (\cf1 int\b0  j\cf2\b =\b0\cf4 0\cf2\b ;\b0\cf1 j\cf2\b <\b0\cf1 t\cf2\b .\b0\cf1 c\cf2\b ;\b0\cf1 j\cf2\b ++)
\par \b0\cf1         \cf2\b \{
\par \b0\cf1 	        t\cf2\b .\b0\cf1 s\cf2\b [\b0\cf1 i\cf2\b ][\b0\cf1 j\cf2\b ]=\b0\cf4 0\cf2\b ;
\par \b0\cf1 	        \b for\cf2 (\cf1 int\b0  k\cf2\b =\b0\cf4 0\cf2\b ;\b0\cf1 k\cf2\b <\b0\cf1 c\cf2\b ;\b0\cf1 k\cf2\b ++)\{
\par \b0\cf1 	        	t\cf2\b .\b0\cf1 s\cf2\b [\b0\cf1 i\cf2\b ][\b0\cf1 j\cf2\b ]+=\b0\cf1 s\cf2\b [\b0\cf1 i\cf2\b ][\b0\cf1 k\cf2\b ]\b0\cf1  \cf2\b *\b0\cf1  obj\cf2\b .\b0\cf1 s\cf2\b [\b0\cf1 k\cf2\b ][\b0\cf1 j\cf2\b ];
\par \b0\cf1 			\cf2\b \}
\par \b0\cf1 	            
\par         \cf2\b \}
\par \b0\cf1 	\cf2\b \}
\par \b0\cf1          
\par     \b return\b0  t\cf2\b ;
\par \}
\par \cf1 void\b0  mat\cf2\b ::\b0\cf1 read\cf2\b ()
\par \{
\par \b0\cf1    cout\cf2\b <<\cf5 "Enter Size of Matrix : \\n"\cf2 ;
\par \b0\cf1    cin\cf2\b >>\b0\cf1 r\cf2\b >>\b0\cf1 c\cf2\b ;
\par \b0\cf1    cout\cf2\b <<\cf5 "Enter the Elements of Matrix :\\n"\cf2 ;
\par \b0\cf1    \b for\cf2 (\cf1 int\b0  i\cf2\b =\b0\cf4 0\cf2\b ;\b0\cf1 i\cf2\b <\b0\cf1 r\cf2\b ;\b0\cf1 i\cf2\b ++)\{
\par \b0\cf1    		\b for\cf2 (\cf1 int\b0  j\cf2\b =\b0\cf4 0\cf2\b ;\b0\cf1 j\cf2\b <\b0\cf1 c\cf2\b ;\b0\cf1 j\cf2\b ++)\{
\par \b0\cf1    		cin\cf2\b >>\b0\cf1 s\cf2\b [\b0\cf1 i\cf2\b ][\b0\cf1 j\cf2\b ];
\par \b0\cf1 		\cf2\b \}
\par \b0\cf1 		
\par    \cf2\b \}
\par \b0\cf1         
\par \cf2\b \}
\par \cf1 void\b0  mat\cf2\b ::\b0\cf1 show\cf2\b ()
\par \{
\par \b0\cf1   \b for\cf2 (\cf1 int\b0  i\cf2\b =\b0\cf4 0\cf2\b ;\b0\cf1 i\cf2\b <\b0\cf1 r\cf2\b ;\b0\cf1 i\cf2\b ++)\{
\par \b0\cf1   		\b for\cf2 (\cf1 int\b0  j\cf2\b =\b0\cf4 0\cf2\b ;\b0\cf1 j\cf2\b <\b0\cf1 c\cf2\b ;\b0\cf1 j\cf2\b ++)\{
\par \b0\cf1   		cout\cf2\b <<\b0\cf1 s\cf2\b [\b0\cf1 i\cf2\b ][\b0\cf1 j\cf2\b ]<<\cf5 "\\t"\cf2 ;
\par \b0\cf1 	    \cf2\b \}
\par \b0\cf1 	  cout\cf2\b <<\cf5 "\\n"\cf2 ;
\par \b0\cf1     \cf2\b \}
\par \}
\par \cf1 int\b0  main\cf2\b ()
\par \{
\par \b0\cf1      mat obj1 \cf2\b ,\b0\cf1 obj2\cf2\b ,\b0\cf1 obj3\cf2\b ;
\par \b0\cf1      cout\cf2\b <<\cf5 "Enter First Matrix\\n"\cf2 ;
\par \b0\cf1      obj1\cf2\b .\b0\cf1 read\cf2\b ();
\par \b0\cf1 	 cout\cf2\b <<\b0\cf1 endl\cf2\b ;
\par \b0\cf1      cout\cf2\b <<\cf5 "Enter Second Matrix\\n"\cf2 ;
\par \b0\cf1      obj2\cf2\b .\b0\cf1 read\cf2\b ();
\par \b0\cf1      obj3\cf2\b =\b0\cf1 obj1 \cf2\b +\b0\cf1  obj2\cf2\b ;
\par \b0\cf1      cout\cf2\b <<\cf5 "Result After Addition of two Matrix\\n"\cf2 ;
\par \b0\cf1      obj3\cf2\b .\b0\cf1 show\cf2\b ();
\par \b0\cf1      obj3\cf2\b =\b0\cf1 obj1 \cf2\b *\b0\cf1  obj2\cf2\b ;
\par \b0\cf1      cout\cf2\b <<\cf5 "Result After Multiplication of two Matrix\\n"\cf2 ;
\par \b0\cf1      obj3\cf2\b .\b0\cf1 show\cf2\b ();
\par \}
\par 
\par }